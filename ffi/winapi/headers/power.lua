require( 'ffi/winapi/headers/windows' )
local ffi = require( 'ffi' )
ffi.cdef [[
  typedef UINT POWER_INFORMATION_LEVEL; //Alias
  static const UINT SystemPowerPolicyAc = 0;
  static const UINT SystemPowerPolicyDc = 1;
  static const UINT VerifySystemPolicyAc = 2;
  static const UINT VerifySystemPolicyDc = 3;
  static const UINT SystemPowerCapabilities = 4;
  static const UINT SystemBatteryState = 5;
  static const UINT SystemPowerStateHandler = 6;
  static const UINT ProcessorStateHandler = 7;
  static const UINT SystemPowerPolicyCurrent = 8;
  static const UINT AdministratorPowerPolicy = 9;
  static const UINT SystemReserveHiberFile = 10;
  static const UINT ProcessorInformation = 11;
  static const UINT SystemPowerInformation = 12;
  static const UINT ProcessorStateHandler2 = 13;
  static const UINT LastWakeTime = 14;
  static const UINT LastSleepTime = 15;
  static const UINT SystemExecutionState = 16;
  static const UINT SystemPowerStateNotifyHandler = 17;
  static const UINT ProcessorPowerPolicyAc = 18;
  static const UINT ProcessorPowerPolicyDc = 19;
  static const UINT VerifyProcessorPowerPolicyAc = 20;
  static const UINT VerifyProcessorPowerPolicyDc = 21;
  static const UINT ProcessorPowerPolicyCurrent = 22;
  static const UINT SystemPowerStateLogging = 23;
  static const UINT SystemPowerLoggingEntry = 24;
  static const UINT SetPowerSettingValue = 25;
  static const UINT NotifyUserPowerSetting = 26;
  static const UINT GetPowerTransitionVetoes = 27;
  static const UINT SetPowerTransitionVeto = 28;
  static const UINT SystemVideoState = 29;
  static const UINT TraceApplicationPowerMessage = 30;
  static const UINT TraceApplicationPowerMessageEnd = 31;
  static const UINT ProcessorPerfStates = 32;
  static const UINT ProcessorIdleStates = 33;
  static const UINT ProcessorThrottleStates = 34;
  static const UINT SystemWakeSource = 35;
  static const UINT SystemHiberFileInformation = 36;
  static const UINT TraceServicePowerMessage = 37;
  static const UINT ProcessorLoad = 38;
  static const UINT PowerShutdownNotification = 39;
  typedef UINT POWER_DATA_ACCESSOR; //Alias
  static const UINT ACCESS_AC_POWER_SETTING_INDEX = 0;
  static const UINT ACCESS_DC_POWER_SETTING_INDEX = 1;
  static const UINT ACCESS_FRIENDLY_NAME = 2;
  static const UINT ACCESS_DESCRIPTION = 3;
  static const UINT ACCESS_POSSIBLE_POWER_SETTING = 4;
  static const UINT ACCESS_POSSIBLE_POWER_SETTING_FRIENDLY_NAME = 5;
  static const UINT ACCESS_POSSIBLE_POWER_SETTING_DESCRIPTION = 6;
  static const UINT ACCESS_DEFAULT_AC_POWER_SETTING = 7;
  static const UINT ACCESS_DEFAULT_DC_POWER_SETTING = 8;
  static const UINT ACCESS_POSSIBLE_VALUE_MIN = 9;
  static const UINT ACCESS_POSSIBLE_VALUE_MAX = 10;
  static const UINT ACCESS_POSSIBLE_VALUE_INCREMENT = 11;
  static const UINT ACCESS_POSSIBLE_VALUE_UNITS = 12;
  static const UINT ACCESS_ICON_RESOURCE = 13;
  static const UINT ACCESS_DEFAULT_SECURITY_DESCRIPTOR = 14;
  static const UINT ACCESS_ATTRIBUTES = 15;
  static const UINT ACCESS_SCHEME = 16;
  static const UINT ACCESS_SUBGROUP = 17;
  static const UINT ACCESS_INDIVIDUAL_SETTING = 18;
  static const UINT ACCESS_ACTIVE_SCHEME = 19;
  static const UINT ACCESS_CREATE_SCHEME = 20;
  typedef UINT POWER_ACTION; //Alias
  static const UINT PowerActionNone = 0;
  static const UINT PowerActionReserved = 1;
  static const UINT PowerActionSleep = 2;
  static const UINT PowerActionHibernate = 3;
  static const UINT PowerActionShutdown = 4;
  static const UINT PowerActionShutdownReset = 5;
  static const UINT PowerActionShutdownOff = 6;
  static const UINT PowerActionWarmEject = 7;
  typedef UINT SYSTEM_POWER_STATE; //Alias
  static const UINT PowerSystemUnspecified = 0;
  static const UINT PowerSystemWorking = 1;
  static const UINT PowerSystemSleeping1 = 2;
  static const UINT PowerSystemSleeping2 = 3;
  static const UINT PowerSystemSleeping3 = 4;
  static const UINT PowerSystemHibernate = 5;
  static const UINT PowerSystemShutdown = 6;
]]
