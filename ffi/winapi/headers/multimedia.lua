require( 'ffi/winapi/headers/windows' )
local ffi = require( 'ffi' )
ffi.cdef [[
  typedef DWORD FOURCC; //Alias
  typedef UINT MMRESULT; //Alias
  static const MMRESULT MMSYSERR_NOERROR = 0;
  static const MMRESULT MMSYSERR_ERROR = 1;
  static const MMRESULT MMSYSERR_BADDEVICEID = 2;
  static const MMRESULT MMSYSERR_NOTENABLED = 3;
  static const MMRESULT MMSYSERR_ALLOCATED = 4;
  static const MMRESULT MMSYSERR_INVALHANDLE = 5;
  static const MMRESULT MMSYSERR_NODRIVER = 6;
  static const MMRESULT MMSYSERR_NOMEM = 7;
  static const MMRESULT MMSYSERR_NOTSUPPORTED = 8;
  static const MMRESULT MMSYSERR_BADERRNUM = 9;
  static const MMRESULT MMSYSERR_INVALFLAG = 10;
  static const MMRESULT MMSYSERR_INVALPARAM = 11;
  static const MMRESULT MMSYSERR_HANDLEBUSY = 12;
  static const MMRESULT MMSYSERR_INVALIDALIAS = 13;
  static const MMRESULT MMSYSERR_BADDB = 14;
  static const MMRESULT MMSYSERR_KEYNOTFOUND = 15;
  static const MMRESULT MMSYSERR_READERROR = 16;
  static const MMRESULT MMSYSERR_WRITEERROR = 17;
  static const MMRESULT MMSYSERR_DELETEERROR = 18;
  static const MMRESULT MMSYSERR_VALNOTFOUND = 19;
  static const MMRESULT MMSYSERR_NODRIVERCB = 20;
  static const MMRESULT MMSYSERR_MOREDATA = 21;
  static const MMRESULT WAVERR_BADFORMAT = 32;
  static const MMRESULT WAVERR_STILLPLAYING = 33;
  static const MMRESULT WAVERR_UNPREPARED = 34;
  static const MMRESULT WAVERR_SYNC = 35;
  static const MMRESULT MIDIERR_UNPREPARED = 64;
  static const MMRESULT MIDIERR_STILLPLAYING = 65;
  static const MMRESULT MIDIERR_NOMAP = 66;
  static const MMRESULT MIDIERR_NOTREADY = 67;
  static const MMRESULT MIDIERR_NODEVICE = 68;
  static const MMRESULT MIDIERR_INVALIDSETUP = 69;
  static const MMRESULT MIDIERR_BADOPENMODE = 70;
  static const MMRESULT MIDIERR_DONT_CONTINUE = 71;
  static const MMRESULT JOYERR_PARMS = 165;
  static const MMRESULT JOYERR_NOCANDO = 166;
  static const MMRESULT JOYERR_UNPLUGGED = 167;
  static const MMRESULT MMIOERR_FILENOTFOUND = 257;
  static const MMRESULT MMIOERR_OUTOFMEMORY = 258;
  static const MMRESULT MMIOERR_CANNOTOPEN = 259;
  static const MMRESULT MMIOERR_CANNOTCLOSE = 260;
  static const MMRESULT MMIOERR_CANNOTREAD = 261;
  static const MMRESULT MMIOERR_CANNOTWRITE = 262;
  static const MMRESULT MMIOERR_CANNOTSEEK = 263;
  static const MMRESULT MMIOERR_CANNOTEXPAND = 264;
  static const MMRESULT MMIOERR_CHUNKNOTFOUND = 265;
  static const MMRESULT MMIOERR_UNBUFFERED = 266;
  static const MMRESULT MMIOERR_PATHNOTFOUND = 267;
  static const MMRESULT MMIOERR_ACCESSDENIED = 268;
  static const MMRESULT MMIOERR_SHARINGVIOLATION = 269;
  static const MMRESULT MMIOERR_NETWORKERROR = 270;
  static const MMRESULT MMIOERR_TOOMANYOPENFILES = 271;
  static const MMRESULT MMIOERR_INVALIDFILE = 272;
  static const MMRESULT ACMERR_NOTPOSSIBLE = 512;
  static const MMRESULT ACMERR_BUSY = 513;
  static const MMRESULT ACMERR_UNPREPARED = 514;
  static const MMRESULT ACMERR_CANCELED = 515;
  static const MMRESULT MIXERR_INVALLINE = 1024;
  static const MMRESULT MIXERR_INVALCONTROL = 1025;
  static const MMRESULT MIXERR_INVALVALUE = 1026;
  typedef WORD WaveFormat; //Alias
  static const WaveFormat WAVE_FORMAT_UNKNOWN = 0x0000;
  static const WaveFormat WAVE_FORMAT_PCM = 0x0001;
  static const WaveFormat WAVE_FORMAT_ADPCM = 0x0002;
  static const WaveFormat WAVE_FORMAT_IEEE_FLOAT = 0x0003;
  static const WaveFormat WAVE_FORMAT_VSELP = 0x0004;
  static const WaveFormat WAVE_FORMAT_IBM_CVSD = 0x0005;
  static const WaveFormat WAVE_FORMAT_ALAW = 0x0006;
  static const WaveFormat WAVE_FORMAT_MULAW = 0x0007;
  static const WaveFormat WAVE_FORMAT_DTS = 0x0008;
  static const WaveFormat WAVE_FORMAT_DRM = 0x0009;
  static const WaveFormat WAVE_FORMAT_WMAVOICE9 = 0x000A;
  static const WaveFormat WAVE_FORMAT_WMAVOICE10 = 0x000B;
  static const WaveFormat WAVE_FORMAT_OKI_ADPCM = 0x0010;
  static const WaveFormat WAVE_FORMAT_DVI_ADPCM = 0x0011;
  static const WaveFormat WAVE_FORMAT_MEDIASPACE_ADPCM = 0x0012;
  static const WaveFormat WAVE_FORMAT_SIERRA_ADPCM = 0x0013;
  static const WaveFormat WAVE_FORMAT_G723_ADPCM = 0x0014;
  static const WaveFormat WAVE_FORMAT_DIGISTD = 0x0015;
  static const WaveFormat WAVE_FORMAT_DIGIFIX = 0x0016;
  static const WaveFormat WAVE_FORMAT_DIALOGIC_OKI_ADPCM = 0x0017;
  static const WaveFormat WAVE_FORMAT_MEDIAVISION_ADPCM = 0x0018;
  static const WaveFormat WAVE_FORMAT_CU_CODEC = 0x0019;
  static const WaveFormat WAVE_FORMAT_YAMAHA_ADPCM = 0x0020;
  static const WaveFormat WAVE_FORMAT_SONARC = 0x0021;
  static const WaveFormat WAVE_FORMAT_DSPGROUP_TRUESPEECH = 0x0022;
  static const WaveFormat WAVE_FORMAT_ECHOSC1 = 0x0023;
  static const WaveFormat WAVE_FORMAT_AUDIOFILE_AF36 = 0x0024;
  static const WaveFormat WAVE_FORMAT_APTX = 0x0025;
  static const WaveFormat WAVE_FORMAT_AUDIOFILE_AF10 = 0x0026;
  static const WaveFormat WAVE_FORMAT_PROSODY_1612 = 0x0027;
  static const WaveFormat WAVE_FORMAT_LRC = 0x0028;
  static const WaveFormat WAVE_FORMAT_DOLBY_AC2 = 0x0030;
  static const WaveFormat WAVE_FORMAT_GSM610 = 0x0031;
  static const WaveFormat WAVE_FORMAT_MSNAUDIO = 0x0032;
  static const WaveFormat WAVE_FORMAT_ANTEX_ADPCME = 0x0033;
  static const WaveFormat WAVE_FORMAT_CONTROL_RES_VQLPC = 0x0034;
  static const WaveFormat WAVE_FORMAT_DIGIREAL = 0x0035;
  static const WaveFormat WAVE_FORMAT_DIGIADPCM = 0x0036;
  static const WaveFormat WAVE_FORMAT_CONTROL_RES_CR10 = 0x0037;
  static const WaveFormat WAVE_FORMAT_NMS_VBXADPCM = 0x0038;
  static const WaveFormat WAVE_FORMAT_CS_IMAADPCM = 0x0039;
  static const WaveFormat WAVE_FORMAT_ECHOSC3 = 0x003A;
  static const WaveFormat WAVE_FORMAT_ROCKWELL_ADPCM = 0x003B;
  static const WaveFormat WAVE_FORMAT_ROCKWELL_DIGITALK = 0x003C;
  static const WaveFormat WAVE_FORMAT_XEBEC = 0x003D;
  static const WaveFormat WAVE_FORMAT_G721_ADPCM = 0x0040;
  static const WaveFormat WAVE_FORMAT_G728_CELP = 0x0041;
  static const WaveFormat WAVE_FORMAT_MSG723 = 0x0042;
  static const WaveFormat WAVE_FORMAT_MPEG = 0x0050;
  static const WaveFormat WAVE_FORMAT_RT24 = 0x0052;
  static const WaveFormat WAVE_FORMAT_PAC = 0x0053;
  static const WaveFormat WAVE_FORMAT_MPEGLAYER3 = 0x0055;
  static const WaveFormat WAVE_FORMAT_LUCENT_G723 = 0x0059;
  static const WaveFormat WAVE_FORMAT_CIRRUS = 0x0060;
  static const WaveFormat WAVE_FORMAT_ESPCM = 0x0061;
  static const WaveFormat WAVE_FORMAT_VOXWARE = 0x0062;
  static const WaveFormat WAVE_FORMAT_CANOPUS_ATRAC = 0x0063;
  static const WaveFormat WAVE_FORMAT_G726_ADPCM = 0x0064;
  static const WaveFormat WAVE_FORMAT_G722_ADPCM = 0x0065;
  static const WaveFormat WAVE_FORMAT_DSAT_DISPLAY = 0x0067;
  static const WaveFormat WAVE_FORMAT_VOXWARE_BYTE_ALIGNED = 0x0069;
  static const WaveFormat WAVE_FORMAT_VOXWARE_AC8 = 0x0070;
  static const WaveFormat WAVE_FORMAT_VOXWARE_AC10 = 0x0071;
  static const WaveFormat WAVE_FORMAT_VOXWARE_AC16 = 0x0072;
  static const WaveFormat WAVE_FORMAT_VOXWARE_AC20 = 0x0073;
  static const WaveFormat WAVE_FORMAT_VOXWARE_RT24 = 0x0074;
  static const WaveFormat WAVE_FORMAT_VOXWARE_RT29 = 0x0075;
  static const WaveFormat WAVE_FORMAT_VOXWARE_RT29HW = 0x0076;
  static const WaveFormat WAVE_FORMAT_VOXWARE_VR12 = 0x0077;
  static const WaveFormat WAVE_FORMAT_VOXWARE_VR18 = 0x0078;
  static const WaveFormat WAVE_FORMAT_VOXWARE_TQ40 = 0x0079;
  static const WaveFormat WAVE_FORMAT_SOFTSOUND = 0x0080;
  static const WaveFormat WAVE_FORMAT_VOXWARE_TQ60 = 0x0081;
  static const WaveFormat WAVE_FORMAT_MSRT24 = 0x0082;
  static const WaveFormat WAVE_FORMAT_G729A = 0x0083;
  static const WaveFormat WAVE_FORMAT_MVI_MVI2 = 0x0084;
  static const WaveFormat WAVE_FORMAT_DF_G726 = 0x0085;
  static const WaveFormat WAVE_FORMAT_DF_GSM610 = 0x0086;
  static const WaveFormat WAVE_FORMAT_ISIAUDIO = 0x0088;
  static const WaveFormat WAVE_FORMAT_ONLIVE = 0x0089;
  static const WaveFormat WAVE_FORMAT_SBC24 = 0x0091;
  static const WaveFormat WAVE_FORMAT_DOLBY_AC3_SPDIF = 0x0092;
  static const WaveFormat WAVE_FORMAT_MEDIASONIC_G723 = 0x0093;
  static const WaveFormat WAVE_FORMAT_PROSODY_8KBPS = 0x0094;
  static const WaveFormat WAVE_FORMAT_ZYXEL_ADPCM = 0x0097;
  static const WaveFormat WAVE_FORMAT_PHILIPS_LPCBB = 0x0098;
  static const WaveFormat WAVE_FORMAT_PACKED = 0x0099;
  static const WaveFormat WAVE_FORMAT_MALDEN_PHONYTALK = 0x00A0;
  static const WaveFormat WAVE_FORMAT_RAW_AAC1 = 0x00FF;
  static const WaveFormat WAVE_FORMAT_RHETOREX_ADPCM = 0x0100;
  static const WaveFormat WAVE_FORMAT_IRAT = 0x0101;
  static const WaveFormat WAVE_FORMAT_VIVO_G723 = 0x0111;
  static const WaveFormat WAVE_FORMAT_VIVO_SIREN = 0x0112;
  static const WaveFormat WAVE_FORMAT_DIGITAL_G723 = 0x0123;
  static const WaveFormat WAVE_FORMAT_SANYO_LD_ADPCM = 0x0125;
  static const WaveFormat WAVE_FORMAT_SIPROLAB_ACEPLNET = 0x0130;
  static const WaveFormat WAVE_FORMAT_SIPROLAB_ACELP4800 = 0x0131;
  static const WaveFormat WAVE_FORMAT_SIPROLAB_ACELP8V3 = 0x0132;
  static const WaveFormat WAVE_FORMAT_SIPROLAB_G729 = 0x0133;
  static const WaveFormat WAVE_FORMAT_SIPROLAB_G729A = 0x0134;
  static const WaveFormat WAVE_FORMAT_SIPROLAB_KELVIN = 0x0135;
  static const WaveFormat WAVE_FORMAT_G726ADPCM = 0x0140;
  static const WaveFormat WAVE_FORMAT_QUALCOMM_PUREVOICE = 0x0150;
  static const WaveFormat WAVE_FORMAT_QUALCOMM_HALFRATE = 0x0151;
  static const WaveFormat WAVE_FORMAT_TUBGSM = 0x0155;
  static const WaveFormat WAVE_FORMAT_MSAUDIO1 = 0x0160;
  static const WaveFormat WAVE_FORMAT_WMAUDIO2 = 0x0161;
  static const WaveFormat WAVE_FORMAT_WMAUDIO3 = 0x0162;
  static const WaveFormat WAVE_FORMAT_WMAUDIO_LOSSLESS = 0x0163;
  static const WaveFormat WAVE_FORMAT_WMASPDIF = 0x0164;
  static const WaveFormat WAVE_FORMAT_UNISYS_NAP_ADPCM = 0x0170;
  static const WaveFormat WAVE_FORMAT_UNISYS_NAP_ULAW = 0x0171;
  static const WaveFormat WAVE_FORMAT_UNISYS_NAP_ALAW = 0x0172;
  static const WaveFormat WAVE_FORMAT_UNISYS_NAP_16K = 0x0173;
  static const WaveFormat WAVE_FORMAT_CREATIVE_ADPCM = 0x0200;
  static const WaveFormat WAVE_FORMAT_CREATIVE_FASTSPEECH8 = 0x0202;
  static const WaveFormat WAVE_FORMAT_CREATIVE_FASTSPEECH10 = 0x0203;
  static const WaveFormat WAVE_FORMAT_UHER_ADPCM = 0x0210;
  static const WaveFormat WAVE_FORMAT_QUARTERDECK = 0x0220;
  static const WaveFormat WAVE_FORMAT_ILINK_VC = 0x0230;
  static const WaveFormat WAVE_FORMAT_RAW_SPORT = 0x0240;
  static const WaveFormat WAVE_FORMAT_ESST_AC3 = 0x0241;
  static const WaveFormat WAVE_FORMAT_GENERIC_PASSTHRU = 0x0249;
  static const WaveFormat WAVE_FORMAT_IPI_HSX = 0x0250;
  static const WaveFormat WAVE_FORMAT_IPI_RPELP = 0x0251;
  static const WaveFormat WAVE_FORMAT_CS2 = 0x0260;
  static const WaveFormat WAVE_FORMAT_SONY_SCX = 0x0270;
  static const WaveFormat WAVE_FORMAT_FM_TOWNS_SND = 0x0300;
  static const WaveFormat WAVE_FORMAT_BTV_DIGITAL = 0x0400;
  static const WaveFormat WAVE_FORMAT_QDESIGN_MUSIC = 0x0450;
  static const WaveFormat WAVE_FORMAT_VME_VMPCM = 0x0680;
  static const WaveFormat WAVE_FORMAT_TPC = 0x0681;
  static const WaveFormat WAVE_FORMAT_OLIGSM = 0x1000;
  static const WaveFormat WAVE_FORMAT_OLIADPCM = 0x1001;
  static const WaveFormat WAVE_FORMAT_OLICELP = 0x1002;
  static const WaveFormat WAVE_FORMAT_OLISBC = 0x1003;
  static const WaveFormat WAVE_FORMAT_OLIOPR = 0x1004;
  static const WaveFormat WAVE_FORMAT_LH_CODEC = 0x1100;
  static const WaveFormat WAVE_FORMAT_NORRIS = 0x1400;
  static const WaveFormat WAVE_FORMAT_SOUNDSPACE_MUSICOMPRESS = 0x1500;
  static const WaveFormat WAVE_FORMAT_MPEG_ADTS_AAC = 0x1600;
  static const WaveFormat WAVE_FORMAT_MPEG_RAW_AAC = 0x1601;
  static const WaveFormat WAVE_FORMAT_MPEG_LOAS = 0x1602;
  static const WaveFormat WAVE_FORMAT_NOKIA_MPEG_ADTS_AAC = 0x1608;
  static const WaveFormat WAVE_FORMAT_NOKIA_MPEG_RAW_AAC = 0x1609;
  static const WaveFormat WAVE_FORMAT_VODAFONE_MPEG_ADTS_AAC = 0x160A;
  static const WaveFormat WAVE_FORMAT_VODAFONE_MPEG_RAW_AAC = 0x160B;
  static const WaveFormat WAVE_FORMAT_MPEG_HEAAC = 0x1610;
  static const WaveFormat WAVE_FORMAT_DVM = 0x2000;
  static const WaveFormat WAVE_FORMAT_DTS2 = 0x2001;
  static const WaveFormat WAVE_FORMAT_EXTENSIBLE = 0xFFFE;
  static const WaveFormat WAVE_FORMAT_DEVELOPMENT = 0xFFFF;
# pragma pack( push, 1 )
  typedef struct WAVEFORMATEX {
    WaveFormat wFormatTag;
    WORD nChannels;
    DWORD nSamplesPerSec;
    DWORD nAvgBytesPerSec;
    WORD nBlockAlign;
    WORD wBitsPerSample;
    WORD cbSize;
  } WAVEFORMATEX;
# pragma pack( pop )
  typedef WAVEFORMATEX *LPWAVEFORMATEX; //Pointer
  typedef WAVEFORMATEX *LPCWAVEFORMATEX; //Pointer
  typedef DWORD SPEAKER_POSITION; //Alias
]]
