require( 'ffi/winapi/headers/windows' )
local ffi = require( 'ffi' )
ffi.cdef [[
  void*                         _memccpy(                                                         void* dest, WINAPI_void* src, int c, size_t count);
  void*                         memchr(                                                           WINAPI_void* buf, int c, size_t count);
  int                           memcmp(                                                           WINAPI_void* buf1, WINAPI_void* buf2, size_t count);
  void*                         memcpy(                                                           void* dest, WINAPI_void* src, size_t count);
  errno_t                       memcpy_s(                                                         void* dest, size_t numberOfElements, WINAPI_void* src, size_t count);
  errno_t                       wmemcpy_s(                                                        wchar_t* dest, size_t numberOfElements, WINAPI_wchar_t* src, size_t count);
  int                           _memicmp(                                                         WINAPI_void* buf1, WINAPI_void* buf2, size_t count);
  int                           _memicmp_l(                                                       WINAPI_void* buf1, WINAPI_void* buf2, size_t count, _locale_t locale);
  void*                         memmove(                                                          void* dest, WINAPI_void* src, size_t count);
  errno_t                       memmove_s(                                                        void* dest, size_t numberOfElements, WINAPI_void* src, size_t count);
  errno_t                       wmemmove_s(                                                       wchar_t* dest, size_t numberOfElements, WINAPI_wchar_t* src, size_t count);
  void*                         memset(                                                           void* dest, int c, size_t count);
  void                          _swab(                                                            char* src, char* dest, int n);
  int                           isleadbyte(                                                       int c);
  int                           _isleadbyte_l(                                                    int c, _locale_t locale);
  int                           _ismbbalnum(                                                      unsigned int c);
  int                           _ismbbalnum_l(                                                    unsigned int c);
  int                           _ismbbalpha(                                                      unsigned int c);
  int                           _ismbbalpha_l(                                                    unsigned int c);
  int                           _ismbbgraph(                                                      unsigned int c);
  int                           _ismbbgraph_l(                                                    unsigned int c, _locale_t locale);
  int                           _ismbbkalnum(                                                     unsigned int c);
  int                           _ismbbkalnum_l(                                                   unsigned int c, _locale_t locale);
  int                           _ismbbkana(                                                       unsigned int c);
  int                           _ismbbkana_l(                                                     unsigned int c, _locale_t locale);
  int                           _ismbbkprint(                                                     unsigned int c);
  int                           _ismbbkprint_l(                                                   unsigned int c, _locale_t locale);
  int                           _ismbbkpunct(                                                     unsigned int c);
  int                           _ismbbkpunct_l(                                                   unsigned int c, _locale_t locale);
  int                           _ismbblead(                                                       unsigned int c);
  int                           _ismbblead_l(                                                     unsigned int c, _locale_t locale);
  int                           _ismbbprint(                                                      unsigned int c);
  int                           _ismbbprint_l(                                                    unsigned int c, _locale_t locale);
  int                           _ismbbpunct(                                                      unsigned int c);
  int                           _ismbbpunct_l(                                                    unsigned int c, _locale_t locale);
  int                           _ismbbtrail(                                                      unsigned int c);
  int                           _ismbbtrail_l(                                                    unsigned int c, _locale_t locale);
  int                           _ismbslead(                                                       WINAPI_unsigned char* str, WINAPI_unsigned char* current);
  int                           _ismbstrail(                                                      WINAPI_unsigned char* str, WINAPI_unsigned char* current);
  int                           _ismbslead_l(                                                     WINAPI_unsigned char* str, WINAPI_unsigned char* current, _locale_t locale);
  int                           _ismbstrail_l(                                                    WINAPI_unsigned char* str, WINAPI_unsigned char* current, _locale_t locale);
  WINAPI_byte_type              _mbbtype(                                                         unsigned char c, int type);
  WINAPI_byte_type              _mbbtype_l(                                                       unsigned char c, int type, _locale_t locale);
  WINAPI_byte_type              _mbsbtype(                                                        WINAPI_unsigned char* mbstr, size_t count);
  WINAPI_byte_type              _mbsbtype_l(                                                      WINAPI_unsigned char* mbstr, size_t count, _locale_t locale);
  int                           isalnum(                                                          int c);
  int                           iswalnum(                                                         wint_t c);
  int                           _isalnum_l(                                                       int c, _locale_t locale);
  int                           _iswalnum_l(                                                      wint_t c, _locale_t locale);
  int                           _ismbcalnum(                                                      unsigned int c);
  int                           _ismbcalnum_l(                                                    unsigned int c, _locale_t locale);
  int                           _ismbcalpha(                                                      unsigned int c);
  int                           _ismbcalpha_l(                                                    unsigned int c, _locale_t locale);
  int                           _ismbcdigit(                                                      unsigned int c);
  int                           _ismbcdigit_l(                                                    unsigned int c, _locale_t locale);
  int                           isalpha(                                                          int c);
  int                           iswalpha(                                                         wint_t c);
  int                           _isalpha_l(                                                       int c, _locale_t locale);
  int                           _iswalpha_l(                                                      wint_t c, _locale_t locale);
  int                           __isascii(                                                        int c);
  int                           iswascii(                                                         wint_t c);
  int                           iscntrl(                                                          int c);
  int                           iswcntrl(                                                         wint_t c);
  int                           _iscntrl_l(                                                       int c, _locale_t locale);
  int                           _iswcntrl_l(                                                      wint_t c, _locale_t locale);
  int                           __iscsym(                                                         int c);
  int                           __iswcsym(                                                        wint_t c);
  int                           __iscsymf(                                                        int c);
  int                           __iswcsymf(                                                       wint_t c);
  int                           _iswcsym_l(                                                       wint_t c, _locale_t locale);
  int                           _iswcsymf_l(                                                      wint_t c, _locale_t locale);
  int                           isdigit(                                                          int c);
  int                           iswdigit(                                                         wint_t c);
  int                           _isdigit_l(                                                       int c, _locale_t locale);
  int                           _iswdigit_l(                                                      wint_t c, _locale_t locale);
  int                           isgraph(                                                          int c);
  int                           iswgraph(                                                         wint_t c);
  int                           _isgraph_l(                                                       int c, _locale_t locale);
  int                           _iswgraph_l(                                                      wint_t c, _locale_t locale);
  int                           _ismbcgraph(                                                      unsigned int c);
  int                           _ismbcgraph_l(                                                    unsigned int c, _locale_t locale);
  int                           _ismbcprint(                                                      unsigned int c);
  int                           _ismbcprint_l(                                                    unsigned int c, _locale_t locale);
  int                           _ismbcpunct(                                                      unsigned int c);
  int                           _ismbcpunct_l(                                                    unsigned int c, _locale_t locale);
  int                           _ismbcspace(                                                      unsigned int c);
  int                           _ismbcspace_l(                                                    unsigned int c, _locale_t locale);
  int                           islower(                                                          int c);
  int                           iswlower(                                                         wint_t c);
  int                           _islower_l(                                                       int c, _locale_t locale);
  int                           _iswlower_l(                                                      wint_t c, _locale_t locale);
  int                           _ismbclower(                                                      unsigned int c);
  int                           _ismbclower_l(                                                    unsigned int c, _locale_t locale);
  int                           _ismbcupper(                                                      unsigned int c);
  int                           _ismbcupper_l(                                                    unsigned int c, _locale_t locale);
  int                           _ismbchira(                                                       unsigned int c);
  int                           _ismbchira_l(                                                     unsigned int c, _locale_t locale);
  int                           _ismbckata(                                                       unsigned int c);
  int                           _ismbckata_l(                                                     unsigned int c, _locale_t locale);
  int                           _ismbclegal(                                                      unsigned int c);
  int                           _ismbclegal_l(                                                    unsigned int c, _locale_t locale);
  int                           _ismbcsymbol(                                                     unsigned int c);
  int                           _ismbcsymbol_l(                                                   unsigned int c, _locale_t locale);
  int                           _ismbcl0(                                                         unsigned int c);
  int                           _ismbcl0_l(                                                       unsigned int c, _locale_t locale);
  int                           _ismbcl1(                                                         unsigned int c);
  int                           _ismbcl1_l(                                                       unsigned int c, _locale_t locale);
  int                           _ismbcl2(                                                         unsigned int c);
  int                           _ismbcl2_l(                                                       unsigned int c, _locale_t locale);
  int                           isprint(                                                          int c);
  int                           iswprint(                                                         wint_t c);
  int                           _isprint_l(                                                       int c, _locale_t locale);
  int                           _iswprint_l(                                                      wint_t c, _locale_t locale);
  int                           ispunct(                                                          int c);
  int                           iswpunct(                                                         wint_t c);
  int                           _ispunct_l(                                                       int c, _locale_t locale);
  int                           _iswpunct_l(                                                      wint_t c, _locale_t locale);
  int                           isspace(                                                          int c);
  int                           iswspace(                                                         wint_t c);
  int                           _isspace_l(                                                       int c, _locale_t locale);
  int                           _iswspace_l(                                                      wint_t c, _locale_t locale);
  int                           isupper(                                                          int c);
  int                           _isupper_l(                                                       int c, _locale_t locale);
  int                           iswupper(                                                         wint_t c);
  int                           _iswupper_l(                                                      wint_t c, _locale_t locale);
  int                           _isctype(                                                         int c, _ctype_t mask);
  int                           _isctype_l(                                                       int c, _ctype_t mask, _locale_t locale);
  int                           iswctype(                                                         wint_t c, wctype_t mask);
  int                           is_wctype(                                                        wint_t c, wctype_t mask);
  int                           _iswctype_l(                                                      wint_t c, wctype_t mask, _locale_t locale);
  int                           isxdigit(                                                         int c);
  int                           iswxdigit(                                                        wint_t c);
  int                           _isxdigit_l(                                                      int c, _locale_t locale);
  int                           _iswxdigit_l(                                                     wint_t c, _locale_t locale);
  wctype_t                      _wctype(                                                          WINAPI_char* property);
  WINAPI_unsigned short*        __pctype_func(                                                    );
  void                          _aligned_free(                                                    void* memblock);
  void                          _aligned_free_dbg(                                                void* memblock);
  void*                         _aligned_malloc(                                                  size_t size, size_t alignment);
  void*                         _aligned_malloc_dbg(                                              size_t size, size_t alignment, WINAPI_char* filename, int linenumber);
  size_t                        _aligned_msize(                                                   void* memblock, size_t alignment, size_t offset);
  size_t                        _aligned_msize_dbg(                                               void* memblock, size_t alignment, size_t offset);
  void*                         _aligned_offset_malloc(                                           size_t size, size_t alignment, size_t offset);
  void*                         _aligned_offset_malloc_dbg(                                       size_t size, size_t alignment, size_t offset, WINAPI_char* filename, int linenumber);
  void*                         _aligned_offset_realloc(                                          void* memblock, size_t size, size_t alignment, size_t offset);
  void*                         _aligned_offset_realloc_dbg(                                      void* memblock, size_t size, size_t alignment, size_t offset, WINAPI_char* filename, int linenumber);
  void*                         _aligned_offset_recalloc(                                         void* memblock, size_t num, size_t size, size_t alignment, size_t offset);
  void*                         _aligned_offset_recalloc_dbg(                                     void* memblock, size_t num, size_t size, size_t alignment, size_t offset, WINAPI_char* filename, int linenumber);
  void*                         _aligned_realloc(                                                 void* memblock, size_t size, size_t alignment);
  void*                         _aligned_realloc_dbg(                                             void* memblock, size_t size, size_t alignment, WINAPI_char* filename, int linenumber);
  void*                         _aligned_recalloc(                                                void* memblock, size_t num, size_t size, size_t alignment);
  void*                         _aligned_recalloc_dbg(                                            void* memblock, size_t num, size_t size, size_t alignment, WINAPI_char* filename, int linenumber);
  int                           abs(                                                              int n);
  __int64                       _abs64(                                                           __int64 n);
  double                        _wtof(                                                            WINAPI_wchar_t* str);
  double                        _wtof_l(                                                          WINAPI_wchar_t* str, _locale_t locale);
  int                           _wtoi(                                                            WINAPI_wchar_t* str);
  int                           _wtoi_l(                                                          WINAPI_wchar_t* str, _locale_t locale);
  long                          _wtol(                                                            WINAPI_wchar_t* str);
  long                          _wtol_l(                                                          WINAPI_wchar_t* str, _locale_t locale);
  char*                         _itoa(                                                            int value, char* str, int radix);
  char*                         _i64toa(                                                          __int64 value, char* str, int radix);
  char*                         _ui64toa(                                                         unsigned __int64 value, char* str, int radix);
  wchar_t*                      _itow(                                                            int value, wchar_t* str, int radix);
  wchar_t*                      _i64tow(                                                          __int64 value, wchar_t* str, int radix);
  wchar_t*                      _ui64tow(                                                         unsigned __int64 value, wchar_t* str, int radix);
  errno_t                       _itoa_s(                                                          int value, char* buffer, size_t sizeInCharacters, int radix);
  errno_t                       _i64toa_s(                                                        __int64 value, char* buffer, size_t sizeInCharacters, int radix);
  errno_t                       _ui64toa_s(                                                       unsigned __int64 value, char* buffer, size_t sizeInCharacters, int radix);
  errno_t                       _itow_s(                                                          int value, wchar_t* buffer, size_t sizeInCharacters, int radix);
  errno_t                       _i64tow_s(                                                        __int64 value, wchar_t* buffer, size_t sizeInCharacters, int radix);
  errno_t                       _ui64tow_s(                                                       unsigned __int64 value, wchar_t* buffer, size_t sizeInCharacters, int radix);
  long                          labs(                                                             long n);
  char*                         _ltoa(                                                            long value, char* str, int radix);
  wchar_t*                      _ltow(                                                            long value, wchar_t* str, int radix);
  errno_t                       _ltoa_s(                                                          long value, char* str, size_t sizeOfstr, int radix);
  errno_t                       _ltow_s(                                                          long value, wchar_t* str, size_t sizeOfstr, int radix);
  unsigned int                  _mbbtombc(                                                        unsigned int c);
  unsigned int                  _mbbtombc_l(                                                      unsigned int c, _locale_t locale);
  unsigned int                  _mbcjistojms(                                                     unsigned int c);
  unsigned int                  _mbcjistojms_l(                                                   unsigned int c, _locale_t locale);
  unsigned int                  _mbcjmstojis(                                                     unsigned int c);
  unsigned int                  _mbcjmstojis_l(                                                   unsigned int c, _locale_t locale);
  unsigned int                  _mbctohira(                                                       unsigned int c);
  unsigned int                  _mbctohira_l(                                                     unsigned int c, _locale_t locale);
  unsigned int                  _mbctokata(                                                       unsigned int c);
  unsigned int                  _mbctokata_l(                                                     unsigned int c, _locale_t locale);
  unsigned int                  _mbctombb(                                                        unsigned int c);
  unsigned int                  _mbctombb_l(                                                      unsigned int c, _locale_t locale);
  int                           __toascii(                                                        int c);
  int                           tolower(                                                          int c);
  int                           _tolower(                                                         int c);
  int                           towlower(                                                         wint_t c);
  int                           _tolower_l(                                                       int c, _locale_t locale);
  int                           _towlower_l(                                                      wint_t c, _locale_t locale);
  int                           toupper(                                                          int c);
  int                           _toupper(                                                         int c);
  int                           towupper(                                                         wint_t c);
  int                           _toupper_l(                                                       int c, _locale_t locale);
  int                           _towupper_l(                                                      wint_t c, _locale_t locale);
  char*                         _ultoa(                                                           unsigned long value, char* str, int radix);
  wchar_t*                      _ultow(                                                           unsigned long value, wchar_t* str, int radix);
  errno_t                       _ultoa_s(                                                         unsigned long value, char* str, size_t sizeOfstr, int radix);
  errno_t                       _ultow_s(                                                         unsigned long value, wchar_t* str, size_t sizeOfstr, int radix);
  char*                         _fcvt(                                                            double value, int count, int* dec, int* sign);
  errno_t                       _fcvt_s(                                                          char* buffer, size_t sizeInBytes, double value, int count, int* dec, int* sign);
  char*                         _gcvt(                                                            double value, int digits, char* buffer);
  errno_t                       _gcvt_s(                                                          char* buffer, size_t sizeInBytes, double value, int digits);
  long                          _atol_l(                                                          WINAPI_char* str, _locale_t locale);
  int                           _atoi_l(                                                          WINAPI_char* str, _locale_t locale);
  double                        atof(                                                             WINAPI_char* str);
  double                        _atof_l(                                                          WINAPI_char* str, _locale_t locale);
  __int64                       _atoi64_l(                                                        WINAPI_char* str, _locale_t locale);
  int                           atoi(                                                             WINAPI_char* str);
  __int64                       _atoi64(                                                          WINAPI_char* str);
  long                          atol(                                                             WINAPI_char* str);
  int                           _atodbl(                                                          _CRT_DOUBLE* value, char* str);
  int                           _atodbl_l(                                                        _CRT_DOUBLE* value, char* str, _locale_t locale);
  int                           _atoldbl(                                                         _LDOUBLE* value, char* str);
  int                           _atoldbl_l(                                                       _LDOUBLE* value, char* str, _locale_t locale);
  int                           _atoflt(                                                          _CRT_FLOAT* value, char* str);
  int                           _atoflt_l(                                                        _CRT_FLOAT* value, char* str, _locale_t locale);
  __int64                       _wtoi64(                                                          WINAPI_wchar_t* str);
  __int64                       _wtoi64_l(                                                        WINAPI_wchar_t* str, _locale_t locale);
  unsigned long                 strtoul(                                                          WINAPI_char* nptr, char** endptr, int base);
  unsigned long                 _strtoul_l(                                                       WINAPI_char* nptr, char** endptr, int base, _locale_t locale);
  unsigned long                 wcstoul(                                                          WINAPI_wchar_t* nptr, wchar_t** endptr, int base);
  unsigned long                 _wcstoul_l(                                                       WINAPI_wchar_t* nptr, wchar_t** endptr, int base, _locale_t locale);
  double                        strtod(                                                           WINAPI_char* nptr, char** endptr);
  double                        _strtod_l(                                                        WINAPI_char* nptr, char** endptr, _locale_t locale);
  double                        wcstod(                                                           WINAPI_wchar_t* nptr, wchar_t** endptr);
  double                        _wcstod_l(                                                        WINAPI_wchar_t* nptr, wchar_t** endptr, _locale_t locale);
  long                          strtol(                                                           WINAPI_char* nptr, char** endptr, int base);
  long                          wcstol(                                                           WINAPI_wchar_t* nptr, wchar_t** endptr, int base);
  long                          _strtol_l(                                                        WINAPI_char* nptr, char** endptr, int base, _locale_t locale);
  long                          _wcstol_l(                                                        WINAPI_wchar_t* nptr, wchar_t** endptr, int base, _locale_t locale);
  int                           mbtowc(                                                           wchar_t* wchar, WINAPI_char* mbchar, size_t count);
  int                           _mbtowc_l(                                                        wchar_t* wchar, WINAPI_char* mbchar, size_t count, _locale_t locale);
  size_t                        mbstowcs(                                                         wchar_t* wcstr, WINAPI_char* mbstr, size_t count);
  size_t                        _mbstowcs_l(                                                      wchar_t* wcstr, WINAPI_char* mbstr, size_t count, _locale_t locale);
  errno_t                       mbstowcs_s(                                                       size_t* pReturnValue, wchar_t* wcstr, size_t sizeInWords, WINAPI_char* mbstr, size_t count);
  errno_t                       _mbstowcs_s_l(                                                    size_t* pReturnValue, wchar_t* wcstr, size_t sizeInWords, WINAPI_char* mbstr, size_t count, _locale_t locale);
  size_t                        wcstombs(                                                         char* mbstr, WINAPI_wchar_t* wcstr, size_t count);
  size_t                        _wcstombs_l(                                                      char* mbstr, WINAPI_wchar_t* wcstr, size_t count, _locale_t locale);
  errno_t                       wcstombs_s(                                                       size_t* pReturnValue, char* mbstr, size_t sizeInBytes, WINAPI_wchar_t* wcstr, size_t count);
  errno_t                       _wcstombs_s_l(                                                    size_t* pReturnValue, char* mbstr, size_t sizeInBytes, WINAPI_wchar_t* wcstr, size_t count, _locale_t locale);
  int                           wctomb(                                                           char* mbchar, wchar_t wchar);
  int                           _wctomb_l(                                                        char* mbchar, wchar_t wchar, _locale_t locale);
  errno_t                       wctomb_s(                                                         int* pRetValue, char* mbchar, size_t sizeInBytes, wchar_t wchar);
  errno_t                       _wctomb_s_l(                                                      int* pRetValue, char* mbchar, size_t sizeInBytes, wchar_t wchar, _locale_t locale);
  unsigned int                  _mbctoupper_l(                                                    unsigned int c, _locale_t locale);
  unsigned int                  _mbctoupper(                                                      unsigned int c);
  unsigned int                  _mbctolower(                                                      unsigned int c);
  unsigned int                  _mbctolower_l(                                                    unsigned int c, _locale_t locale);
  char*                         _ecvt(                                                            double value, int count, int* dec, int* sign);
  errno_t                       _ecvt_s(                                                          char* _Buffer, size_t _SizeInBytes, double _Value, int _Count, int* _Dec, int* _Sign);
  size_t                        mbrtowc(                                                          wchar_t* wchar, WINAPI_char* mbchar, size_t count, mbstate_t mbstate);
  size_t                        mbsrtowcs(                                                        wchar_t* wcstr, WINAPI_char** mbstr, size_t count, mbstate_t* mbstate);
  errno_t                       mbsrtowcs_s(                                                      size_t* pReturnValue, wchar_t* wcstr, size_t sizeInWords, WINAPI_char** mbstr, size_t count, mbstate_t* mbstate);
  __int64                       _strtoi64(                                                        WINAPI_char* nptr, char** endptr, int base);
  __int64                       _wcstoi64(                                                        WINAPI_wchar_t* nptr, wchar_t** endptr, int base);
  __int64                       _strtoi64_l(                                                      WINAPI_char* nptr, char** endptr, int base, _locale_t locale);
  __int64                       _wcstoi64_l(                                                      WINAPI_wchar_t* nptr, wchar_t** endptr, int base, _locale_t locale);
  unsigned __int64              _strtoui64(                                                       WINAPI_char* nptr, char** endptr, int base);
  unsigned __int64              _wcstoui64(                                                       WINAPI_wchar_t* nptr, wchar_t** endptr, int base);
  unsigned __int64              _strtoui64_l(                                                     WINAPI_char* nptr, char** endptr, int base, _locale_t locale);
  unsigned __int64              _wcstoui64_l(                                                     WINAPI_wchar_t* nptr, wchar_t** endptr, int base, _locale_t locale);
  size_t                        wcrtomb(                                                          char* mbchar, wchar_t wchar, mbstate_t* mbstate);
  errno_t                       wcrtomb_s(                                                        size_t* pReturnValue, char* mbchar, size_t sizeOfmbchar, wchar_t* wchar, mbstate_t* mbstate);
  size_t                        wcsrtombs(                                                        char* mbstr, WINAPI_wchar_t** wcstr, size_t count, mbstate_t* mbstate);
  errno_t                       wcsrtombs_s(                                                      size_t* pReturnValue, char* mbstr, size_t sizeInBytes, WINAPI_wchar_t** wcstr, size_t count, mbstate_t* mbstate);
  int                           wctob(                                                            wint_t wchar);
  unsigned short                _byteswap_ushort(                                                 unsigned short val);
  unsigned long                 _byteswap_ulong(                                                  unsigned long val);
  unsigned __int64              _byteswap_uint64(                                                 unsigned __int64 val);
  wint_t                        btowc(                                                            int c);
  int                           _CrtCheckMemory(                                                  );
  void                          _CrtDbgBreak(                                                     );
  int                           _CrtDbgReport(                                                    WINAPI_CRT_REPORT_TYPE reportType, WINAPI_char* filename, int linenumber, WINAPI_char* moduleName, WINAPI_char* format);
  int                           _CrtDbgReportW(                                                   WINAPI_CRT_REPORT_TYPE reportType, WINAPI_wchar_t* filename, int linenumber, WINAPI_wchar_t* moduleName, WINAPI_wchar_t* format);
  void                          _CrtDoForAllClientObjects(                                        void* pfn, void* context);
  int                           _CrtDumpMemoryLeaks(                                              );
  int                           _CrtIsMemoryBlock(                                                WINAPI_void* userData, unsigned int size, long* requestNumber, char** filename, int* linenumber);
  int                           _CrtIsValidHeapPointer(                                           WINAPI_void* userData);
  int                           _CrtIsValidPointer(                                               WINAPI_void* address, unsigned int size, int access);
  void                          _CrtMemCheckpoint(                                                _CrtMemState* state);
  int                           _CrtMemDifference(                                                _CrtMemState* stateDiff, WINAPI__CrtMemState* oldState, WINAPI__CrtMemState* newState);
  void                          _CrtMemDumpAllObjectsSince(                                       WINAPI__CrtMemState* state);
  void                          _CrtMemDumpStatistics(                                            WINAPI__CrtMemState* state);
  int                           _CrtReportBlockType(                                              WINAPI_void* pBlock);
  _CRT_ALLOC_HOOK               _CrtSetAllocHook(                                                 _CRT_ALLOC_HOOK allocHook);
  long                          _CrtSetBreakAlloc(                                                long lBreakAlloc);
  int                           _CrtSetDbgFlag(                                                   WINAPI_CRTDBG_FLAG newFlag);
  _CRT_DUMP_CLIENT              _CrtSetDumpClient(                                                _CRT_DUMP_CLIENT dumpClient);
  _HFILE                        _CrtSetReportFile(                                                WINAPI_CRT_REPORT_TYPE reportType, _HFILE reportFile);
  _CRT_REPORT_HOOK              _CrtSetReportHook(                                                _CRT_REPORT_HOOK reportHook);
  int                           _CrtSetReportHook2(                                               WINAPI_CRT_RPTHOOK_MODE mode, _CRT_REPORT_HOOK pfnNewHook);
  int                           _CrtSetReportHookW2(                                              WINAPI_CRT_RPTHOOK_MODE mode, _CRT_REPORT_HOOKW pfnNewHook);
  WINAPI_CRTDBG_MODE            _CrtSetReportMode(                                                WINAPI_CRT_REPORT_TYPE reportType, WINAPI_CRTDBG_MODE reportMode);
  _CRT_ALLOC_HOOK               _CrtGetAllocHook(                                                 );
  _CRT_DUMP_CLIENT              _CrtGetDumpClient(                                                );
  _CRT_REPORT_HOOK              _CrtGetReportHook(                                                );
  size_t                        _CrtSetDebugFillThreshold(                                        size_t _NewThreshold);
  int                           _chdir(                                                           WINAPI_char* dirname);
  int                           _wchdir(                                                          WINAPI_wchar_t* dirname);
  int                           _chdrive(                                                         int drive);
  char*                         _getcwd(                                                          char* buffer, int maxlen);
  char*                         _getcwd_dbg(                                                      char* buffer, int maxlen, WINAPI_DBG_BLOCK_TYPE blockType, WINAPI_char* filename, int linenumber);
  wchar_t*                      _wgetcwd(                                                         wchar_t* buffer, int maxlen);
  wchar_t*                      _wgetcwd_dbg(                                                     wchar_t* buffer, int maxlen, WINAPI_DBG_BLOCK_TYPE blockType, WINAPI_char* filename, int linenumber);
  char*                         _getdcwd(                                                         int drive, char* buffer, int maxlen);
  char*                         _getdcwd_dbg(                                                     int drive, char* buffer, int maxlen, WINAPI_DBG_BLOCK_TYPE blockType, WINAPI_char* filename, int linenumber);
  wchar_t*                      _wgetdcwd(                                                        int drive, wchar_t* buffer, int maxlen);
  wchar_t*                      _wgetdcwd_dbg(                                                    int drive, wchar_t* buffer, int maxlen, WINAPI_DBG_BLOCK_TYPE blockType, WINAPI_char* filename, int linenumber);
  errno_t                       _getdiskfree(                                                     unsigned drive, struct _diskfree_t* driveinfo);
  int                           _getdrive(                                                        );
  unsigned long                 _getdrives(                                                       );
  int                           _mkdir(                                                           WINAPI_char* dirname);
  int                           _wmkdir(                                                          WINAPI_wchar_t* dirname);
  int                           _rmdir(                                                           WINAPI_char* dirname);
  int                           _wrmdir(                                                          WINAPI_wchar_t* dirname);
  void                          _searchenv(                                                       WINAPI_char* filename, WINAPI_char* varname, char* pathname);
  void                          _wsearchenv(                                                      WINAPI_wchar_t* filename, WINAPI_wchar_t* varname, wchar_t* pathname);
  errno_t                       _searchenv_s(                                                     WINAPI_char* filename, WINAPI_char* varname, char* pathname, size_t numberOfElements);
  errno_t                       _wsearchenv_s(                                                    WINAPI_wchar_t* filename, WINAPI_wchar_t* varname, wchar_t* pathname, size_t numberOfElements);
  WINAPI_set_error_mode         _set_error_mode(                                                  WINAPI_set_error_mode modeval);
  WINAPI_set_error_mode         _seterrormode(                                                    WINAPI_set_error_mode mode);
  void                          _purecall(                                                        );
  _purecall_handler             _set_purecall_handler(                                            _purecall_handler function);
  errno_t                       _get_doserrno(                                                    int* pValue);
  errno_t                       _get_errno(                                                       int* pValue);
  errno_t                       _set_doserrno(                                                    int value);
  errno_t                       _set_errno(                                                       int value);
  WINAPI_abort_flag             _set_abort_behavior(                                              WINAPI_abort_flag flags, WINAPI_abort_flag mask);
  _invalid_parameter_handler    _get_invalid_parameter_handler(                                   );
  _invalid_parameter_handler    _set_invalid_parameter_handler(                                   _invalid_parameter_handler pNew);
  void                          _amsg_exit(                                                       int rterrnum);
  _se_translator_function       ?_set_se_translator@@YAP6AXIPAU_EXCEPTION_POINTERS@@@ZP6AXI0@Z@Z( _se_translator_function seTransFunction);
  terminate_function            _get_terminate(                                                   );
  terminate_function            ?set_terminate@@YAP6AXXZP6AXXZ@Z(                                 terminate_function termFunction);
  unexpected_function           _get_unexpected(                                                  );
  unexpected_function           ?set_unexpected@@YAP6AXXZP6AXXZ@Z(                                unexpected_function unexpFunction);
  void                          ?terminate@@YAXXZ(                                                );
  void                          ?unexpected@@YAXXZ(                                               );
  EXCEPTION_DISPOSITION         __CxxFrameHandler(                                                EHExceptionRecord* pExcept, EHRegistrationNode* pRN, void* pContext, DispatcherContext* pDC);
  WINAPI_disposition_type       _except_handler3(                                                 PEXCEPTION_RECORD exception_record, PEXCEPTION_REGISTRATION registration, PCONTEXT context, PEXCEPTION_REGISTRATION dispatcher);
  bool                          __uncaught_exception(                                             );
  WINAPI_xcpt_action            _XcptFilter(                                                      WINAPI_xcpt_num xcptnum, PEXCEPTION_POINTERS pxcptinfoptrs);
  int                           _resetstkoflw(                                                    );
  int                           _abnormal_termination(                                            );
  int                           _chsize(                                                          int fd, long size);
  errno_t                       _chsize_s(                                                        int fd, __int64 size);
  long                          _filelength(                                                      int fd);
  __int64                       _filelengthi64(                                                   int fd);
  int                           _fstat(                                                           int fd, struct _stat* buffer);
  int                           _fstat32(                                                         int fd, struct _stat32* buffer);
  int                           _fstat64(                                                         int fd, struct _stat64* buffer);
  int                           _fstati64(                                                        int fd, struct _stati64* buffer);
  int                           _fstat32i64(                                                      int fd, struct _stat32i64* buffer);
  int                           _fstat64i32(                                                      int fd, struct _stat64i32* buffer);
  intptr_t                      _get_osfhandle(                                                   int fd);
  int                           _isatty(                                                          int fd);
  int                           _locking(                                                         int fd, WINAPI__LK_MODE mode, long nbytes);
  int                           _open_osfhandle(                                                  intptr_t osfhandle, int flags);
  int                           _access(                                                          WINAPI_char* path, int mode);
  int                           _waccess(                                                         WINAPI_wchar_t* path, int mode);
  errno_t                       _access_s(                                                        WINAPI_char* path, int mode);
  errno_t                       _waccess_s(                                                       WINAPI_wchar_t* path, int mode);
  int                           _chmod(                                                           WINAPI_char* filename, WINAPI_perm_mode pmode);
  int                           _wchmod(                                                          WINAPI_wchar_t* filename, WINAPI_perm_mode pmode);
  char*                         _fullpath(                                                        char* absPath, WINAPI_char* relPath, size_t maxLength);
  char*                         _fullpath_dbg(                                                    char* absPath, WINAPI_char* relPath, size_t maxLength, WINAPI_DBG_BLOCK_TYPE blockType, WINAPI_char* filename, int linenumber);
  wchar_t*                      _wfullpath(                                                       wchar_t* absPath, WINAPI_wchar_t* relPath, size_t maxLength);
  wchar_t*                      _wfullpath_dbg(                                                   wchar_t* absPath, WINAPI_wchar_t* relPath, size_t maxLength, WINAPI_DBG_BLOCK_TYPE blockType, WINAPI_char* filename, int linenumber);
  void                          _makepath(                                                        char* path, WINAPI_char* drive, WINAPI_char* dir, WINAPI_char* fname, WINAPI_char* ext);
  void                          _wmakepath(                                                       wchar_t* path, WINAPI_wchar_t* drive, WINAPI_wchar_t* dir, WINAPI_wchar_t* fname, WINAPI_wchar_t* ext);
  errno_t                       _makepath_s(                                                      char* path, size_t sizeInBytes, WINAPI_char* drive, WINAPI_char* dir, WINAPI_char* fname, WINAPI_char* ext);
  errno_t                       _wmakepath_s(                                                     wchar_t* path, size_t sizeInWords, WINAPI_wchar_t* drive, WINAPI_wchar_t* dir, WINAPI_wchar_t* fname, WINAPI_wchar_t* ext);
  char*                         _mktemp(                                                          char* template);
  wchar_t*                      _wmktemp(                                                         wchar_t* template);
  errno_t                       _mktemp_s(                                                        char* template, size_t sizeInChars);
  errno_t                       _wmktemp_s(                                                       wchar_t* template, size_t sizeInChars);
  int                           remove(                                                           WINAPI_char* path);
  int                           _wremove(                                                         WINAPI_wchar_t* path);
  int                           rename(                                                           WINAPI_char* oldname, WINAPI_char* newname);
  int                           _wrename(                                                         WINAPI_wchar_t* oldname, WINAPI_wchar_t* newname);
  void                          _splitpath(                                                       WINAPI_char* path, char* drive, char* dir, char* fname, char* ext);
  void                          _wsplitpath(                                                      WINAPI_wchar_t* path, wchar_t* drive, wchar_t* dir, wchar_t* fname, wchar_t* ext);
  errno_t                       _splitpath_s(                                                     WINAPI_char* path, char* drive, size_t driveNumberOfElements, char* dir, size_t dirNumberOfElements, char* fname, size_t nameNumberOfElements, char* ext, size_t extNumberOfElements);
  errno_t                       _wsplitpath_s(                                                    WINAPI_wchar_t* path, wchar_t* drive, size_t driveNumberOfElements, wchar_t* dir, size_t dirNumberOfElements, wchar_t* fname, size_t nameNumberOfElements, wchar_t* ext, size_t extNumberOfElements);
  int                           _stat(                                                            WINAPI_char* path, struct _stat* buffer);
  int                           _stat32(                                                          WINAPI_char* path, struct _stat32* buffer);
  int                           _stat64(                                                          WINAPI_char* path, struct _stat64* buffer);
  int                           _stati64(                                                         WINAPI_char* path, struct _stati64* buffer);
  int                           _stat32i64(                                                       WINAPI_char* path, struct _stat32i64* buffer);
  int                           _stat64i32(                                                       WINAPI_char* path, struct _stat64i32* buffer);
  int                           _wstat(                                                           WINAPI_wchar_t* path, struct _stat* buffer);
  int                           _wstat32(                                                         WINAPI_wchar_t* path, struct _stat32* buffer);
  int                           _wstat64(                                                         WINAPI_wchar_t* path, struct _stat64* buffer);
  int                           _wstati64(                                                        WINAPI_wchar_t* path, struct _stati64* buffer);
  int                           _wstat32i64(                                                      WINAPI_wchar_t* path, struct _stat32i64* buffer);
  int                           _wstat64i32(                                                      WINAPI_wchar_t* path, struct _stat64i32* buffer);
  int                           _unlink(                                                          WINAPI_char* filename);
  int                           _wunlink(                                                         WINAPI_wchar_t* filename);
  double                        acos(                                                             double x);
  float                         acosf(                                                            float x);
  double                        asin(                                                             double x);
  float                         asinf(                                                            float x);
  double                        atan(                                                             double x);
  double                        atan2(                                                            double y, double x);
  float                         atanf(                                                            float x);
  float                         atan2f(                                                           float y, float x);
  double                        _cabs(                                                            struct _complex z);
  double                        ceil(                                                             double x);
  float                         ceilf(                                                            float x);
  double                        _chgsign(                                                         double x);
  float                         _chgsignf(                                                        float x);
  WINAPI__SW_FLOAT              _clearfp(                                                         );
  unsigned int                  _control87(                                                       WINAPI_control_bits new, WINAPI_control_mask mask);
  unsigned int                  _controlfp(                                                       WINAPI_control_bits new, WINAPI_control_mask mask);
  int                           __control87_2(                                                    WINAPI_control_bits new, WINAPI_control_mask mask, unsigned int* x86_cw, unsigned int* sse2_cw);
  errno_t                       _controlfp_s(                                                     unsigned int* currentControl, WINAPI_control_bits newControl, WINAPI_control_mask mask);
  double                        _copysign(                                                        double x, double y);
  float                         _copysignf(                                                       float x, float y);
  double                        cos(                                                              double x);
  float                         cosf(                                                             float x);
  double                        cosh(                                                             double x);
  float                         coshf(                                                            float x);
  div_t                         div(                                                              int numer, int denom);
  double                        exp(                                                              double x);
  float                         expf(                                                             float x);
  double                        fabs(                                                             double x);
  int                           _finite(                                                          double x);
  double                        floor(                                                            double x);
  float                         floorf(                                                           float x);
  double                        fmod(                                                             double x, double y);
  float                         fmodf(                                                            float x, float y);
  WINAPI__FPCLASS               _fpclass(                                                         double x);
  int                           _fpieee_flt(                                                      unsigned long excCode, struct _EXCEPTION_POINTERS* excInfo, void* handler);
  void                          _fpreset(                                                         );
  double                        frexp(                                                            double x, int* expptr);
  double                        _hypot(                                                           double x, double y);
  float                         _hypotf(                                                          float x, float y);
  int                           _isnan(                                                           double x);
  double                        ldexp(                                                            double x, int exp);
  ldiv_t                        ldiv(                                                             long int numer, long int denom);
  double                        log(                                                              double x);
  float                         logf(                                                             float x);
  double                        log10(                                                            double x);
  float                         log10f(                                                           float x);
  double                        _logb(                                                            double x);
  unsigned long                 _lrotl(                                                           unsigned long value, int shift);
  unsigned long                 _lrotr(                                                           unsigned long value, int shift);
  int                           _matherr(                                                         struct _exception* except);
  void                          __setusermatherr(                                                 _HANDLE_MATH_ERROR pf);
  double                        modf(                                                             double x, double* intptr);
  float                         modff(                                                            float x, float* intptr);
  double                        _nextafter(                                                       double x, double y);
  double                        pow(                                                              double x, double y);
  float                         powf(                                                             float x, float y);
  int                           rand(                                                             );
  errno_t                       rand_s(                                                           unsigned int* randomValue);
  unsigned int                  _rotl(                                                            unsigned int value, int shift);
  unsigned __int64              _rotl64(                                                          unsigned __int64 value, int shift);
  unsigned int                  _rotr(                                                            unsigned int value, int shift);
  unsigned __int64              _rotr64(                                                          unsigned __int64 value, int shift);
  double                        _scalb(                                                           double x, long exp);
  void                          _set_controlfp(                                                   unsigned int newControl, unsigned int mask);
  double                        sin(                                                              double x);
  float                         sinf(                                                             float x);
  double                        sinh(                                                             double x);
  float                         sinhf(                                                            float x);
  double                        sqrt(                                                             double x);
  float                         sqrtf(                                                            float x);
  void                          srand(                                                            unsigned int seed);
  unsigned int                  _statusfp(                                                        );
  double                        tan(                                                              double x);
  float                         tanf(                                                             float x);
  double                        tanh(                                                             double x);
  float                         tanhf(                                                            float x);
  double                        _y0(                                                              double x);
  double                        _y1(                                                              double x);
  double                        _yn(                                                              int n, double x);
  double                        _j0(                                                              double x);
  double                        _j1(                                                              double x);
  double                        _jn(                                                              int n, double x);
  int                           _set_SSE2_enable(                                                 int flag);
  errno_t                       _set_fmode(                                                       WINAPI_file_translation_mode mode);
  errno_t                       _get_fmode(                                                       WINAPI_file_translation_mode* pmode);
  WINAPI_file_translation_mode  _setmode(                                                         int fd, WINAPI_file_translation_mode mode);
  WINAPI_file_translation_mode* __p__fmode(                                                       );
  void                          clearerr(                                                         FILE* stream);
  errno_t                       clearerr_s(                                                       FILE* stream);
  WINAPI_RET_EOF                fclose(                                                           FILE* stream);
  WINAPI_RET_EOF                _fcloseall(                                                       );
  FILE*                         _fdopen(                                                          int fd, WINAPI_char* mode);
  FILE*                         _wfdopen(                                                         int fd, WINAPI_wchar_t* mode);
  int                           feof(                                                             FILE* stream);
  int                           ferror(                                                           FILE* stream);
  WINAPI_RET_EOF                fflush(                                                           FILE* stream);
  WINAPI_RET_EOF                fgetc(                                                            FILE* stream);
  WINAPI_RET_WEOF               fgetwc(                                                           FILE* stream);
  int                           fgetpos(                                                          FILE* stream, fpos_t* pos);
  char*                         fgets(                                                            char* str, int n, FILE* stream);
  wchar_t*                      fgetws(                                                           wchar_t* str, int n, FILE* stream);
  int                           _fileno(                                                          FILE* stream);
  int                           _flushall(                                                        );
  FILE*                         fopen(                                                            WINAPI_char* filename, WINAPI_char* mode);
  FILE*                         _wfopen(                                                          WINAPI_wchar_t* filename, WINAPI_wchar_t* mode);
  errno_t                       fopen_s(                                                          FILE** pFile, WINAPI_char* filename, WINAPI_char* mode);
  errno_t                       _wfopen_s(                                                        FILE** pFile, WINAPI_wchar_t* filename, WINAPI_wchar_t* mode);
  int                           fprintf(                                                          FILE* stream, WINAPI_char* format);
  int                           _fprintf_l(                                                       FILE* stream, WINAPI_char* format, _locale_t locale);
  int                           fwprintf(                                                         FILE* stream, WINAPI_wchar_t* format);
  int                           _fwprintf_l(                                                      FILE* stream, WINAPI_wchar_t* format, _locale_t locale);
  int                           fprintf_s(                                                        FILE* stream, WINAPI_char* format);
  int                           _fprintf_s_l(                                                     FILE* stream, WINAPI_char* format, _locale_t locale);
  int                           fwprintf_s(                                                       FILE* stream, WINAPI_wchar_t* format);
  int                           _fwprintf_s_l(                                                    FILE* stream, WINAPI_wchar_t* format, _locale_t locale);
  WINAPI_RET_EOF                fputc(                                                            int c, FILE* stream);
  WINAPI_RET_WEOF               fputwc(                                                           wchar_t c, FILE* stream);
  WINAPI_RET_EOF                fputs(                                                            WINAPI_char* str, FILE* stream);
  WINAPI_RET_WEOF_INT           fputws(                                                           WINAPI_wchar_t* str, FILE* stream);
  size_t                        fread(                                                            void* buffer, size_t size, size_t count, FILE* stream);
  FILE*                         freopen(                                                          WINAPI_char* path, WINAPI_char* mode, FILE* stream);
  FILE*                         _wfreopen(                                                        WINAPI_wchar_t* path, WINAPI_wchar_t* mode, FILE* stream);
  errno_t                       freopen_s(                                                        FILE** pFile, WINAPI_char* path, WINAPI_char* mode, FILE* stream);
  errno_t                       _wfreopen_s(                                                      FILE** pFile, WINAPI_wchar_t* path, WINAPI_wchar_t* mode, FILE* stream);
  WINAPI_RET_EOF                fscanf(                                                           FILE* stream, WINAPI_char* format);
  WINAPI_RET_EOF                _fscanf_l(                                                        FILE* stream, WINAPI_char* format, _locale_t locale);
  WINAPI_RET_EOF                fwscanf(                                                          FILE* stream, WINAPI_wchar_t* format);
  WINAPI_RET_EOF                _fwscanf_l(                                                       FILE* stream, WINAPI_wchar_t* format, _locale_t locale);
  WINAPI_RET_EOF                fscanf_s(                                                         FILE* stream, WINAPI_char* format);
  WINAPI_RET_EOF                _fscanf_s_l(                                                      FILE* stream, WINAPI_char* format, _locale_t locale);
  WINAPI_RET_EOF                fwscanf_s(                                                        FILE* stream, WINAPI_wchar_t* format);
  WINAPI_RET_EOF                _fwscanf_s_l(                                                     FILE* stream, WINAPI_wchar_t* format, _locale_t locale);
  int                           fseek(                                                            FILE* stream, long offset, WINAPI_SEEK_TYPE origin);
  int                           _fseeki64(                                                        FILE* stream, __int64 offset, WINAPI_SEEK_TYPE origin);
  int                           fsetpos(                                                          FILE* stream, WINAPI_fpos_t* pos);
  FILE*                         _fsopen(                                                          WINAPI_char* filename, WINAPI_char* mode, WINAPI_share_flag shflag);
  FILE*                         _wfsopen(                                                         WINAPI_wchar_t* filename, WINAPI_wchar_t* mode, WINAPI_share_flag shflag);
  long                          ftell(                                                            FILE* stream);
  __int64                       _ftelli64(                                                        FILE* stream);
  size_t                        fwrite(                                                           WINAPI_void* buffer, size_t size, size_t count, FILE* stream);
  WINAPI_RET_EOF                getc(                                                             FILE* stream);
  WINAPI_RET_WEOF               getwc(                                                            FILE* stream);
  int                           _getmaxstdio(                                                     );
  char*                         gets(                                                             char* buffer);
  wchar_t*                      _getws(                                                           wchar_t* buffer);
  char*                         gets_s(                                                           char* buffer, size_t sizeInCharacters);
  wchar_t*                      _getws_s(                                                         wchar_t* buffer, size_t sizeInCharacters);
  WINAPI_RET_EOF                _getw(                                                            FILE* stream);
  WINAPI_RET_EOF                putc(                                                             int c, FILE* stream);
  WINAPI_RET_WEOF               putwc(                                                            wchar_t c, FILE* stream);
  WINAPI_RET_EOF                puts(                                                             WINAPI_char* str);
  WINAPI_RET_WEOF_INT           _putws(                                                           WINAPI_wchar_t* str);
  WINAPI_RET_EOF                _putw(                                                            int binint, FILE* stream);
  void                          rewind(                                                           FILE* stream);
  int                           _rmtmp(                                                           );
  void                          setbuf(                                                           FILE* stream, char* buffer);
  int                           _setmaxstdio(                                                     int newmax);
  int                           setvbuf(                                                          FILE* stream, char* buffer, WINAPI_buffer_mode mode, size_t size);
  char*                         _tempnam(                                                         WINAPI_char* dir, WINAPI_char* prefix);
  char*                         _tempnam_dbg(                                                     WINAPI_char* dir, WINAPI_char* prefix, WINAPI_DBG_BLOCK_TYPE blockType, WINAPI_char* filename, int linenumber);
  wchar_t*                      _wtempnam(                                                        WINAPI_wchar_t* dir, WINAPI_wchar_t* prefix);
  wchar_t*                      _wtempnam_dbg(                                                    WINAPI_wchar_t* dir, WINAPI_wchar_t* prefix, WINAPI_DBG_BLOCK_TYPE blockType, WINAPI_char* filename, int linenumber);
  char*                         tmpnam(                                                           char* str);
  wchar_t*                      _wtmpnam(                                                         wchar_t* str);
  FILE*                         tmpfile(                                                          );
  errno_t                       tmpfile_s(                                                        FILE** pFilePtr);
  errno_t                       tmpnam_s(                                                         char* str, size_t sizeInChars);
  errno_t                       _wtmpnam_s(                                                       wchar_t* str, size_t sizeInChars);
  WINAPI_RET_EOF                ungetc(                                                           int c, FILE* stream);
  WINAPI_RET_WEOF               ungetwc(                                                          wint_t c, FILE* stream);
  int                           _vcprintf_s(                                                      WINAPI_char* format, va_list argptr);
  int                           _vcprintf_s_l(                                                    WINAPI_char* format, _locale_t locale, va_list argptr);
  int                           _vcwprintf_s(                                                     WINAPI_wchar_t* format, va_list argptr);
  int                           _vcwprintf_s_l(                                                   WINAPI_wchar_t* format, _locale_t locale, va_list argptr);
  int                           vfprintf_s(                                                       FILE* stream, WINAPI_char* format, va_list argptr);
  int                           _vfprintf_s_l(                                                    FILE* stream, WINAPI_char* format, _locale_t locale, va_list argptr);
  int                           vfwprintf_s(                                                      FILE* stream, WINAPI_wchar_t* format, va_list argptr);
  int                           _vfwprintf_s_l(                                                   FILE* stream, WINAPI_wchar_t* format, _locale_t locale, va_list argptr);
  int                           vprintf_s(                                                        WINAPI_char* format, va_list argptr);
  int                           _vprintf_s_l(                                                     WINAPI_char* format, _locale_t locale, va_list argptr);
  int                           vwprintf_s(                                                       WINAPI_wchar_t* format, va_list argptr);
  int                           _vwprintf_s_l(                                                    WINAPI_wchar_t* format, _locale_t locale, va_list argptr);
  int                           printf(                                                           WINAPI_char* format);
  int                           _printf_l(                                                        WINAPI_char* format, _locale_t locale);
  int                           wprintf(                                                          WINAPI_wchar_t* format);
  int                           _wprintf_l(                                                       WINAPI_wchar_t* format, _locale_t locale);
  int                           printf_s(                                                         WINAPI_char* format);
  int                           _printf_s_l(                                                      WINAPI_char* format, _locale_t locale);
  int                           wprintf_s(                                                        WINAPI_wchar_t* format);
  int                           _wprintf_s_l(                                                     WINAPI_wchar_t* format, _locale_t locale);
  WINAPI_RET_EOF                scanf(                                                            WINAPI_char* format);
  WINAPI_RET_EOF                _scanf_l(                                                         WINAPI_char* format, _locale_t locale);
  WINAPI_RET_EOF                wscanf(                                                           WINAPI_wchar_t* format);
  WINAPI_RET_EOF                _wscanf_l(                                                        WINAPI_wchar_t* format, _locale_t locale);
  WINAPI_RET_EOF                scanf_s(                                                          WINAPI_char* format);
  WINAPI_RET_EOF                _scanf_s_l(                                                       WINAPI_char* format, _locale_t locale);
  WINAPI_RET_EOF                wscanf_s(                                                         WINAPI_wchar_t* format);
  WINAPI_RET_EOF                _wscanf_s_l(                                                      WINAPI_wchar_t* format, _locale_t locale);
  int                           _vcprintf(                                                        WINAPI_char* format, va_list argptr);
  int                           _vcprintf_l(                                                      WINAPI_char* format, _locale_t locale, va_list argptr);
  int                           _vcwprintf(                                                       WINAPI_wchar_t* format, va_list argptr);
  int                           _vcwprintf_l(                                                     WINAPI_wchar_t* format, _locale_t locale, va_list argptr);
  int                           _vcprintf_p(                                                      WINAPI_char* format, va_list argptr);
  int                           _vcprintf_p_l(                                                    WINAPI_char* format, _locale_t locale, va_list argptr);
  int                           _vcwprintf_p(                                                     WINAPI_wchar_t* format, va_list argptr);
  int                           _vcwprintf_p_l(                                                   WINAPI_wchar_t* format, _locale_t locale, va_list argptr);
  int                           vfprintf(                                                         FILE* stream, WINAPI_char* format, va_list argptr);
  int                           _vfprintf_l(                                                      FILE* stream, WINAPI_char* format, _locale_t locale, va_list argptr);
  int                           vfwprintf(                                                        FILE* stream, WINAPI_wchar_t* format, va_list argptr);
  int                           _vfwprintf_l(                                                     FILE* stream, WINAPI_wchar_t* format, _locale_t locale, va_list argptr);
  int                           _vfprintf_p(                                                      FILE* stream, WINAPI_char* format, va_list argptr);
  int                           _vfprintf_p_l(                                                    FILE* stream, WINAPI_char* format, _locale_t locale, va_list argptr);
  int                           _vfwprintf_p(                                                     FILE* stream, WINAPI_wchar_t* format, va_list argptr);
  int                           _vfwprintf_p_l(                                                   FILE* stream, WINAPI_wchar_t* format, _locale_t locale, va_list argptr);
  int                           vprintf(                                                          WINAPI_char* format, va_list argptr);
  int                           _vprintf_l(                                                       WINAPI_char* format, _locale_t locale, va_list argptr);
  int                           vwprintf(                                                         WINAPI_wchar_t* format, va_list argptr);
  int                           _vwprintf_l(                                                      WINAPI_wchar_t* format, _locale_t locale, va_list argptr);
  int                           _vprintf_p(                                                       WINAPI_char* format, va_list argptr);
  int                           _vprintf_p_l(                                                     WINAPI_char* format, _locale_t locale, va_list argptr);
  int                           _vwprintf_p(                                                      WINAPI_wchar_t* format, va_list argptr);
  int                           _vwprintf_p_l(                                                    WINAPI_wchar_t* format, _locale_t locale, va_list argptr);
  int                           _vscprintf(                                                       WINAPI_char* format, va_list argptr);
  int                           _vscprintf_l(                                                     WINAPI_char* format, _locale_t locale, va_list argptr);
  int                           _vscwprintf(                                                      WINAPI_wchar_t* format, va_list argptr);
  int                           _vscwprintf_l(                                                    WINAPI_wchar_t* format, _locale_t locale, va_list argptr);
  int                           _vscprintf_p(                                                     WINAPI_char* format, va_list argptr);
  int                           _vscprintf_p_l(                                                   WINAPI_char* format, _locale_t locale, va_list argptr);
  int                           _vscwprintf_p(                                                    WINAPI_wchar_t* format, va_list argptr);
  int                           _vscwprintf_p_l(                                                  WINAPI_wchar_t* format, _locale_t locale, va_list argptr);
  int                           _wprintf_p(                                                       WINAPI_wchar_t* format);
  int                           _wprintf_p_l(                                                     WINAPI_wchar_t* format, _locale_t locale);
  int                           _fprintf_p(                                                       FILE* stream, WINAPI_char* format);
  int                           _fprintf_p_l(                                                     FILE* stream, WINAPI_char* format, _locale_t locale);
  int                           _fwprintf_p(                                                      FILE* stream, WINAPI_wchar_t* format);
  int                           _fwprintf_p_l(                                                    FILE* stream, WINAPI_wchar_t* format, _locale_t locale);
  int                           _printf_p(                                                        WINAPI_char* format);
  int                           _printf_p_l(                                                      WINAPI_char* format, _locale_t locale);
  WINAPI_RET_EOF                putchar(                                                          int c);
  WINAPI_RET_WEOF               putwchar(                                                         wchar_t c);
  WINAPI_RET_EOF                getchar(                                                          );
  WINAPI_RET_WEOF               getwchar(                                                         );
  WINAPI_RET_EOF                _fgetchar(                                                        );
  WINAPI_RET_WEOF               _fgetwchar(                                                       );
  WINAPI_RET_EOF                _fputchar(                                                        int c);
  WINAPI_RET_WEOF               _fputwchar(                                                       wchar_t c);
  void                          _lock_file(                                                       FILE* file);
  void                          _unlock_file(                                                     FILE* file);
  int                           _close(                                                           int fd);
  int                           _commit(                                                          int fd);
  int                           _creat(                                                           WINAPI_char* filename, WINAPI_perm_mode pmode);
  int                           _wcreat(                                                          WINAPI_wchar_t* filename, WINAPI_perm_mode pmode);
  int                           _dup(                                                             int fd);
  int                           _dup2(                                                            int fd1, int fd2);
  int                           _eof(                                                             int fd);
  long                          _lseek(                                                           int fd, long offset, WINAPI_SEEK_TYPE origin);
  __int64                       _lseeki64(                                                        int fd, __int64 offset, WINAPI_SEEK_TYPE origin);
  int                           _open(                                                            WINAPI_char* filename, WINAPI_open_flag oflag, WINAPI_perm_mode pmode);
  int                           _wopen(                                                           WINAPI_wchar_t* filename, WINAPI_open_flag oflag, WINAPI_perm_mode pmode);
  int                           _read(                                                            int fd, void* buffer, unsigned int count);
  int                           _sopen(                                                           WINAPI_char* filename, WINAPI_open_flag oflag, WINAPI_share_flag shflag, WINAPI_perm_mode pmode);
  int                           _wsopen(                                                          WINAPI_wchar_t* filename, WINAPI_open_flag oflag, WINAPI_share_flag shflag, WINAPI_perm_mode pmode);
  errno_t                       _sopen_s(                                                         int* pfh, WINAPI_char* filename, WINAPI_open_flag oflag, WINAPI_share_flag shflag, WINAPI_perm_mode pmode);
  errno_t                       _wsopen_s(                                                        int* pfh, WINAPI_wchar_t* filename, WINAPI_open_flag oflag, WINAPI_share_flag shflag, WINAPI_perm_mode pmode);
  long                          _tell(                                                            int handle);
  __int64                       _telli64(                                                         int handle);
  WINAPI_perm_mode              _umask(                                                           WINAPI_perm_mode pmode);
  errno_t                       _umask_s(                                                         WINAPI_perm_mode mode, WINAPI_perm_mode* pOldMode);
  int                           _write(                                                           int fd, WINAPI_void* buffer, unsigned int count);
  char*                         _cgets(                                                           char* buffer);
  wchar_t*                      _cgetws(                                                          wchar_t* buffer);
  errno_t                       _cgets_s(                                                         char* buffer, size_t numberOfElements, size_t* pSizeRead);
  errno_t                       _cgetws_s(                                                        wchar_t* buffer, size_t* pSizeRead);
  int                           _cprintf(                                                         WINAPI_char* format);
  int                           _cprintf_l(                                                       WINAPI_char* format, _locale_t locale);
  int                           _cwprintf(                                                        WINAPI_wchar* format);
  int                           _cwprintf_l(                                                      WINAPI_wchar* format, _locale_t locale);
  int                           _cprintf_s(                                                       WINAPI_char* format);
  int                           _cprintf_s_l(                                                     WINAPI_char* format, _locale_t locale);
  int                           _cwprintf_s(                                                      WINAPI_wchar* format);
  int                           _cwprintf_s_l(                                                    WINAPI_wchar* format, _locale_t locale);
  int                           _cputs(                                                           WINAPI_char* str);
  int                           _cputws(                                                          WINAPI_wchar_t* str);
  WINAPI_RET_EOF                _cscanf(                                                          WINAPI_char* format);
  WINAPI_RET_EOF                _cscanf_l(                                                        WINAPI_char* format, _locale_t locale);
  WINAPI_RET_EOF                _cwscanf(                                                         WINAPI_wchar_t* format);
  WINAPI_RET_EOF                _cwscanf_l(                                                       WINAPI_wchar_t* format, _locale_t locale);
  WINAPI_RET_EOF                _cscanf_s(                                                        WINAPI_char* format);
  WINAPI_RET_EOF                _cscanf_s_l(                                                      WINAPI_char* format, _locale_t locale);
  WINAPI_RET_EOF                _cwscanf_s(                                                       WINAPI_wchar_t* format);
  WINAPI_RET_EOF                _cwscanf_s_l(                                                     WINAPI_wchar_t* format, _locale_t locale);
  int                           _getch(                                                           );
  wint_t                        _getwch(                                                          );
  int                           _getche(                                                          );
  wint_t                        _getwche(                                                         );
  int                           _inp(                                                             unsigned short port);
  unsigned short                _inpw(                                                            unsigned short port);
  unsigned long                 _inpd(                                                            unsigned short port);
  int                           _kbhit(                                                           );
  int                           _outp(                                                            unsigned short port, int databyte);
  unsigned short                _outpw(                                                           unsigned short port, unsigned short dataword);
  unsigned long                 _outpd(                                                           unsigned short port, unsigned long dataword);
  WINAPI_RET_EOF                _putch(                                                           int c);
  WINAPI_RET_WEOF               _putwch(                                                          wchar_t c);
  WINAPI_RET_EOF                _ungetch(                                                         int c);
  WINAPI_RET_WEOF               _ungetwch(                                                        wint_t c);
  int                           _cprintf_p(                                                       WINAPI_char* format);
  int                           _cprintf_p_l(                                                     WINAPI_char* format, _locale_t locale);
  int                           _cwprintf_p(                                                      WINAPI_wchar* format);
  int                           _cwprintf_p_l(                                                    WINAPI_wchar* format, _locale_t locale);
  WINAPI_RET_EOF                _fclose_nolock(                                                   FILE* stream);
  WINAPI_RET_EOF                _fflush_nolock(                                                   FILE* stream);
  WINAPI_RET_WEOF               _fgetwc_nolock(                                                   FILE* stream);
  size_t                        _fread_nolock(                                                    void* buffer, size_t size, size_t count, FILE* stream);
  int                           _fseek_nolock(                                                    FILE* stream, long offset, WINAPI_SEEK_TYPE origin);
  int                           _fseeki64_nolock(                                                 FILE* stream, __int64 offset, WINAPI_SEEK_TYPE origin);
  long                          _ftell_nolock(                                                    FILE* stream);
  __int64                       _ftelli64_nolock(                                                 FILE* stream);
  size_t                        _fwrite_nolock(                                                   WINAPI_void* buffer, size_t size, size_t count, FILE* stream);
  WINAPI_RET_EOF                _getc_nolock(                                                     FILE* stream);
  int                           _getch_nolock(                                                    );
  wint_t                        _getwch_nolock(                                                   );
  int                           _getche_nolock(                                                   );
  wint_t                        _getwche_nolock(                                                  );
  char*                         _getdcwd_nolock(                                                  int drive, char* buffer, int maxlen);
  wchar_t*                      _wgetdcwd_nolock(                                                 int drive, wchar_t* buffer, int maxlen);
  WINAPI_RET_EOF                _putch_nolock(                                                    int c);
  WINAPI_RET_WEOF               _putwch_nolock(                                                   wchar_t c);
  WINAPI_RET_EOF                _ungetc_nolock(                                                   int c, FILE* stream);
  WINAPI_RET_WEOF               _ungetwc_nolock(                                                  wint_t c, FILE* stream);
  WINAPI_RET_EOF                _ungetch_nolock(                                                  int c);
  WINAPI_RET_WEOF               _ungetwch_nolock(                                                 wint_t c);
  WINAPI_RET_WEOF               _fputwc_nolock(                                                   wchar_t c, FILE* stream);
  char*                         setlocale(                                                        WINAPI_locale_category category, WINAPI_char* locale);
  wchar_t*                      _wsetlocale(                                                      WINAPI_locale_category category, WINAPI_wchar_t* locale);
  _locale_t                     _create_locale(                                                   WINAPI_locale_category category, WINAPI_char* locale);
  _locale_t                     __create_locale(                                                  WINAPI_locale_category category, WINAPI_char* locale);
  void                          _free_locale(                                                     _locale_t locale);
  void                          __free_locale(                                                    _locale_t locale);
  _locale_t                     _get_current_locale(                                              );
  _locale_t                     __get_current_locale(                                             );
  WINAPI_thread_locale_type     _configthreadlocale(                                              WINAPI_thread_locale_type type);
  struct lconv*                 localeconv(                                                       );
  void                          _mbccpy(                                                          unsigned char* dest, WINAPI_unsigned char* src);
  void                          _mbccpy_l(                                                        unsigned char* dest, WINAPI_unsigned char* src, _locale_t locale);
  errno_t                       _mbccpy_s(                                                        unsigned char* dest, size_t buffSizeInBytes, int* pCopied, WINAPI_unsigned char* src);
  errno_t                       _mbccpy_s_l(                                                      unsigned char* dest, size_t buffSizeInBytes, int* pCopied, WINAPI_unsigned char* src, _locale_t locale);
  int                           _getmbcp(                                                         );
  int                           _setmbcp(                                                         WINAPI__MB_CP_TYPE codepage);
  int                           ___mb_cur_max_func(                                               );
  int                           __mb_cur_max(                                                     );
  UINT                          ___lc_codepage_func(                                              );
  LCID*                         ___lc_handle_func(                                                );
  int                           __crtLCMapStringW(                                                LCID Locale, WINAPI_LocaleMappingFlags dwMapFlags, LPCWSTR lpSrcStr, int cchSrc, LPWSTR lpDestStr, int cchDest);
  void*                         calloc(                                                           size_t num, size_t size);
  void                          ??3@YAXPAX@Z(                                                     void* object);
  void                          ??3@YAXPEAX@Z(                                                    void* object);
  void                          ??_V@YAXPAX@Z(                                                    void* object);
  void                          ??_V@YAXPEAX@Z(                                                   void* object);
  void*                         _expand(                                                          void* memblock, size_t size);
  void                          free(                                                             void* memblock);
  void                          _freea(                                                           void* memblock);
  intptr_t                      _get_heap_handle(                                                 );
  size_t                        _get_sbh_threshold(                                               );
  int                           _heapadd(                                                         void* memblock, size_t size);
  WINAPI_HEAP_RESULT            _heapchk(                                                         );
  int                           _heapmin(                                                         );
  WINAPI_HEAP_RESULT            _heapset(                                                         unsigned int fill);
  WINAPI_HEAP_RESULT            _heapwalk(                                                        _HEAPINFO* entryinfo);
  void*                         malloc(                                                           size_t size);
  size_t                        _msize(                                                           void* memblock);
  void*                         ??2@YAPAXI@Z(                                                     size_t count);
  void*                         ??2@YAPEAX_K@Z(                                                   size_t count);
  void*                         ??_U@YAPAXI@Z(                                                    size_t count);
  void*                         ??_U@YAPEAX_K@Z(                                                  size_t count);
  _PNH                          ?_query_new_handler@@YAP6AHI@ZXZ(                                 );
  int                           ?_query_new_mode@@YAHXZ(                                          );
  void*                         realloc(                                                          void* memblock, size_t size);
  int                           _callnewh(                                                        size_t size);
  _PNH                          ?_set_new_handler@@YAP6AHI@ZP6AHI@Z@Z(                            _PNH pNewHandler);
  int                           ?_set_new_mode@@YAHH@Z(                                           int newhandlermode);
  void*                         _expand_dbg(                                                      void* userData, size_t newSize, WINAPI_DBG_BLOCK_TYPE blockType, WINAPI_char* filename, int linenumber);
  void*                         _calloc_dbg(                                                      size_t num, size_t size, WINAPI_DBG_BLOCK_TYPE blockType, WINAPI_char* filename, int linenumber);
  void                          _free_dbg(                                                        void* userData, WINAPI_DBG_BLOCK_TYPE blockType);
  void*                         _malloc_dbg(                                                      size_t size, WINAPI_DBG_BLOCK_TYPE blockType, WINAPI_char* filename, int linenumber);
  size_t                        _msize_dbg(                                                       void* userData, WINAPI_DBG_BLOCK_TYPE blockType);
  void*                         _realloc_dbg(                                                     void* userData, size_t newSize, WINAPI_DBG_BLOCK_TYPE blockType, WINAPI_char* filename, int linenumber);
  void*                         _recalloc(                                                        void* memblock, size_t size);
  void*                         _recalloc_dbg(                                                    void* userData, size_t num, size_t size, WINAPI_DBG_BLOCK_TYPE blockType, WINAPI_char* filename, int linenumber);
  errno_t                       _get_amblksiz(                                                    size_t* blockSize);
  errno_t                       _set_amblksiz(                                                    size_t blockSize);
  int                           _set_sbh_threshold(                                               size_t size);
  void                          abort(                                                            );
  int                           atexit(                                                           void* func);
  uintptr_t                     _beginthread(                                                     void* start_address, unsigned stack_size, void* arglist);
  uintptr_t                     _beginthreadex(                                                   void* security, unsigned stack_size, void* start_address, void* arglist, WINAPI_thread_initflag initflag, unsigned* thrdaddr);
  void                          _cexit(                                                           );
  void                          _c_exit(                                                          );
  intptr_t                      _cwait(                                                           int* termstat, intptr_t procHandle, int action);
  void                          _endthread(                                                       );
  void                          _endthreadex(                                                     unsigned retval);
  intptr_t                      _execl(                                                           WINAPI_char* cmdname, WINAPI_char* args);
  intptr_t                      _wexecl(                                                          WINAPI_wchar_t* cmdname, WINAPI_wchar_t* args);
  intptr_t                      _execle(                                                          WINAPI_char* cmdname, WINAPI_char* args);
  intptr_t                      _wexecle(                                                         WINAPI_wchar_t* cmdname, WINAPI_wchar_t* args);
  intptr_t                      _execlp(                                                          WINAPI_char* cmdname, WINAPI_char* args);
  intptr_t                      _wexeclp(                                                         WINAPI_wchar_t* cmdname, WINAPI_wchar_t* args);
  intptr_t                      _execlpe(                                                         WINAPI_char* cmdname, WINAPI_char* args);
  intptr_t                      _wexeclpe(                                                        WINAPI_wchar_t* cmdname, WINAPI_wchar_t* args);
  intptr_t                      _execv(                                                           WINAPI_char* cmdname, WINAPI_char** argv);
  intptr_t                      _wexecv(                                                          WINAPI_wchar_t* cmdname, WINAPI_wchar_t** argv);
  intptr_t                      _execve(                                                          WINAPI_char* cmdname, WINAPI_char** argv, WINAPI_char** envp);
  intptr_t                      _wexecve(                                                         WINAPI_wchar_t* cmdname, WINAPI_wchar_t** argv, WINAPI_wchar_t** envp);
  intptr_t                      _execvp(                                                          WINAPI_char* cmdname, WINAPI_char** argv);
  intptr_t                      _wexecvp(                                                         WINAPI_wchar_t* cmdname, WINAPI_wchar_t** argv);
  intptr_t                      _execvpe(                                                         WINAPI_char* cmdname, WINAPI_char** argv, WINAPI_char** envp);
  intptr_t                      _wexecvpe(                                                        WINAPI_wchar_t* cmdname, WINAPI_wchar_t** argv, WINAPI_wchar_t** envp);
  void                          exit(                                                             int status);
  void                          _exit(                                                            int status);
  char*                         getenv(                                                           WINAPI_char* varname);
  wchar_t*                      _wgetenv(                                                         WINAPI_wchar_t* varname);
  errno_t                       getenv_s(                                                         size_t* pReturnValue, char* buffer, size_t numberOfElements, WINAPI_char* varname);
  errno_t                       _wgetenv_s(                                                       size_t* pReturnValue, wchar_t* buffer, size_t numberOfElements, WINAPI_wchar_t* varname);
  int                           _getpid(                                                          );
  _onexit_t                     _onexit(                                                          _onexit_t function);
  int                           _pclose(                                                          FILE* stream);
  void                          perror(                                                           WINAPI_char* string);
  void                          _wperror(                                                         WINAPI_wchar_t* string);
  int                           _pipe(                                                            int* pfds, unsigned int psize, WINAPI_open_flag textmode);
  FILE*                         _popen(                                                           WINAPI_char* command, WINAPI_char* mode);
  FILE*                         _wpopen(                                                          WINAPI_wchar_t* command, WINAPI_wchar_t* mode);
  int                           _putenv(                                                          WINAPI_char* envstring);
  int                           _wputenv(                                                         WINAPI_wchar_t* envstring);
  errno_t                       _putenv_s(                                                        WINAPI_char* name, WINAPI_char* value);
  errno_t                       _wputenv_s(                                                       WINAPI_wchar_t* name, WINAPI_wchar_t* value);
  int                           raise(                                                            WINAPI_SIGNAL sig);
  WINAPI_SIGNAL_FUNC            signal(                                                           WINAPI_SIGNAL sig, WINAPI_SIGNAL_FUNC func);
  intptr_t                      _spawnl(                                                          WINAPI_spawn_mode mode, WINAPI_char* cmdname, WINAPI_char* args);
  intptr_t                      _wspawnl(                                                         WINAPI_spawn_mode mode, WINAPI_wchar_t* cmdname, WINAPI_wchar_t* args);
  intptr_t                      _spawnle(                                                         WINAPI_spawn_mode mode, WINAPI_char* cmdname, WINAPI_char* args);
  intptr_t                      _wspawnle(                                                        WINAPI_spawn_mode mode, WINAPI_wchar_t* cmdname, WINAPI_wchar_t* args);
  intptr_t                      _spawnlp(                                                         WINAPI_spawn_mode mode, WINAPI_char* cmdname, WINAPI_char* args);
  intptr_t                      _wspawnlp(                                                        WINAPI_spawn_mode mode, WINAPI_wchar_t* cmdname, WINAPI_wchar_t* args);
  intptr_t                      _spawnlpe(                                                        WINAPI_spawn_mode mode, WINAPI_char* cmdname, WINAPI_char* args);
  intptr_t                      _wspawnlpe(                                                       WINAPI_spawn_mode mode, WINAPI_wchar_t* cmdname, WINAPI_wchar_t* args);
  intptr_t                      _spawnv(                                                          WINAPI_spawn_mode mode, WINAPI_char* cmdname, WINAPI_char** argv);
  intptr_t                      _wspawnv(                                                         WINAPI_spawn_mode mode, WINAPI_wchar_t* cmdname, WINAPI_wchar_t** argv);
  intptr_t                      _spawnve(                                                         WINAPI_spawn_mode mode, WINAPI_char* cmdname, WINAPI_char** argv, WINAPI_char** envp);
  intptr_t                      _wspawnve(                                                        WINAPI_spawn_mode mode, WINAPI_wchar_t* cmdname, WINAPI_wchar_t** argv, WINAPI_wchar_t** envp);
  intptr_t                      _spawnvp(                                                         WINAPI_spawn_mode mode, WINAPI_char* cmdname, WINAPI_char** argv);
  intptr_t                      _wspawnvp(                                                        WINAPI_spawn_mode mode, WINAPI_wchar_t* cmdname, WINAPI_wchar_t** argv);
  intptr_t                      _spawnvpe(                                                        WINAPI_spawn_mode mode, WINAPI_char* cmdname, WINAPI_char** argv, WINAPI_char** envp);
  intptr_t                      _wspawnvpe(                                                       WINAPI_spawn_mode mode, WINAPI_wchar_t* cmdname, WINAPI_wchar_t** argv, WINAPI_wchar_t** envp);
  int                           system(                                                           WINAPI_char* command);
  int                           _wsystem(                                                         WINAPI_wchar_t* command);
  errno_t                       _dupenv_s(                                                        char** buffer, size_t* numberOfElements, WINAPI_char* varname);
  errno_t                       _wdupenv_s(                                                       wchar_t** buffer, size_t* numberOfElements, WINAPI_wchar_t* varname);
  errno_t                       _dupenv_s_dbg(                                                    char** buffer, size_t* numberOfElements, WINAPI_char* varname, WINAPI_DBG_BLOCK_TYPE blockType, WINAPI_char* filename, int linenumber);
  errno_t                       _wdupenv_s_dbg(                                                   wchar_t** buffer, size_t* numberOfElements, WINAPI_wchar_t* varname, WINAPI_DBG_BLOCK_TYPE blockType, WINAPI_char* filename, int linenumber);
  int                           __getmainargs(                                                    int* _Argc, char*** _Argv, char*** _Env, int _DoWildCard, _startupinfo* _StartInfo);
  int                           __wgetmainargs(                                                   int* _Argc, wchar_t*** _Argv, wchar_t*** _Env, int _DoWildCard, _startupinfo* _StartInfo);
  errno_t                       _get_pgmptr(                                                      char** pValue);
  errno_t                       _get_wpgmptr(                                                     wchar_t** pValue);
  errno_t                       _get_fileinfo(                                                    int* pFileInfo);
  errno_t                       _set_fileinfo(                                                    int value);
  void                          __set_app_type(                                                   WINAPI_C_APP_TYPE at);
  _onexit_t                     __dllonexit(                                                      _onexit_t func, _PVFV** pbegin, _PVFV** pend);
  void                          _sleep(                                                           unsigned long duration);
  intptr_t                      _loaddll(                                                         char* filename);
  int                           _unloaddll(                                                       intptr_t handle);
  void*                         _getdllprocaddr(                                                  intptr_t handle, char* procedureName, intptr_t ordinal);
  void*                         bsearch(                                                          WINAPI_void* key, WINAPI_void* base, size_t num, size_t width, WINAPI_compare_function compare);
  void*                         bsearch_s(                                                        WINAPI_void* key, WINAPI_void* base, size_t num, size_t width, WINAPI_compare_s_function compare, void* context);
  void*                         _lfind(                                                           WINAPI_void* key, WINAPI_void* base, unsigned int* num, unsigned int width, WINAPI_compare_function compare);
  void*                         _lfind_s(                                                         WINAPI_void* key, WINAPI_void* base, unsigned int* num, size_t size, WINAPI_compare_s_function compare, void* context);
  void*                         _lsearch(                                                         WINAPI_void* key, void* base, unsigned int* num, unsigned int width, WINAPI_compare_function compare);
  void*                         _lsearch_s(                                                       WINAPI_void* key, void* base, unsigned int* num, size_t size, WINAPI_compare_s_function compare, void* context);
  void                          qsort(                                                            void* base, size_t num, size_t width, WINAPI_compare_s_function compare);
  void                          qsort_s(                                                          void* base, size_t num, size_t width, WINAPI_compare_s_function compare, void* context);
  unsigned char*                _mbsdec(                                                          WINAPI_unsigned char* start, WINAPI_unsigned char* current);
  unsigned char*                _mbsdec_l(                                                        WINAPI_unsigned char* start, WINAPI_unsigned char* current, _locale_t locale);
  unsigned char*                _mbsinc(                                                          WINAPI_unsigned char* current);
  unsigned char*                _mbsinc_l(                                                        WINAPI_unsigned char* current, _locale_t locale);
  unsigned char*                _mbsnbcat(                                                        unsigned char* dest, WINAPI_unsigned char* src, size_t count);
  unsigned char*                _mbsnbcat_l(                                                      unsigned char* dest, WINAPI_unsigned char* src, size_t count, _locale_t locale);
  errno_t                       _mbsnbcat_s(                                                      unsigned char* dest, size_t sizeInBytes, WINAPI_unsigned char* src, size_t count);
  errno_t                       _mbsnbcat_s_l(                                                    unsigned char* dest, size_t sizeInBytes, WINAPI_unsigned char* src, size_t count, _locale_t locale);
  WINAPI__NLSCMPERROR           _mbsnbcmp(                                                        WINAPI_unsigned char* string1, WINAPI_unsigned char* string2, size_t count);
  WINAPI__NLSCMPERROR           _mbsnbcmp_l(                                                      WINAPI_unsigned char* string1, WINAPI_unsigned char* string2, size_t count, _locale_t locale);
  size_t                        _mbsnbcnt(                                                        WINAPI_unsigned char* str, size_t count);
  size_t                        _mbsnbcnt_l(                                                      WINAPI_unsigned char* str, size_t count, _locale_t locale);
  size_t                        _mbsnccnt(                                                        WINAPI_unsigned char* str, size_t count);
  size_t                        _mbsnccnt_l(                                                      WINAPI_unsigned char* str, size_t count, _locale_t locale);
  size_t                        __strncnt(                                                        WINAPI_char* str, size_t count);
  size_t                        __wcsncnt(                                                        WINAPI_wchar_t* str, size_t count);
  unsigned char*                _mbsnbcpy(                                                        unsigned char* strDest, WINAPI_unsigned char* strSource, size_t count);
  unsigned char*                _mbsnbcpy_l(                                                      unsigned char* strDest, WINAPI_unsigned char* strSource, size_t count, _locale_t locale);
  errno_t                       _mbsnbcpy_s(                                                      unsigned char* strDest, size_t sizeInBytes, WINAPI_unsigned char* strSource, size_t count);
  errno_t                       _mbsnbcpy_s_l(                                                    unsigned char* strDest, size_t sizeInBytes, WINAPI_unsigned char* strSource, size_t count, _locale_t locale);
  WINAPI__NLSCMPERROR           _mbsnbicmp(                                                       WINAPI_unsigned char* string1, WINAPI_unsigned char* string2, size_t count);
  unsigned char*                _mbsnbset(                                                        unsigned char* str, unsigned int c, size_t count);
  unsigned char*                _mbsnbset_l(                                                      unsigned char* str, unsigned int c, size_t count, _locale_t locale);
  unsigned int                  _mbsnextc(                                                        WINAPI_unsigned char* str);
  unsigned int                  _mbsnextc_l(                                                      WINAPI_unsigned char* str, _locale_t locale);
  unsigned char*                _mbsninc(                                                         WINAPI_unsigned char* str, size_t count);
  unsigned char*                _mbsninc_l(                                                       WINAPI_unsigned char* str, size_t count, _locale_t locale);
  unsigned char*                _mbsspnp(                                                         WINAPI_unsigned char* str, WINAPI_unsigned char* charset);
  unsigned char*                _mbsspnp_l(                                                       WINAPI_unsigned char* str, WINAPI_unsigned char* charset, _locale_t locale);
  int                           _scprintf(                                                        WINAPI_char* format);
  int                           _scprintf_l(                                                      WINAPI_char* format, _locale_t locale);
  int                           _scwprintf(                                                       WINAPI_wchar_t* format);
  int                           _scwprintf_l(                                                     WINAPI_wchar_t* format, _locale_t locale);
  WINAPI_RET_EOF                _snscanf(                                                         WINAPI_char* input, size_t length, WINAPI_char* format);
  WINAPI_RET_EOF                _snscanf_l(                                                       WINAPI_char* input, size_t length, WINAPI_char* format, _locale_t locale);
  WINAPI_RET_EOF                _snwscanf(                                                        WINAPI_wchar_t* input, size_t length, WINAPI_wchar_t* format);
  WINAPI_RET_EOF                _snwscanf_l(                                                      WINAPI_wchar_t* input, size_t length, WINAPI_wchar_t* format, _locale_t locale);
  WINAPI_RET_EOF                sscanf(                                                           WINAPI_char* buffer, WINAPI_char* format);
  WINAPI_RET_EOF                _sscanf_l(                                                        WINAPI_char* buffer, WINAPI_char* format, _locale_t locale);
  WINAPI_RET_EOF                swscanf(                                                          WINAPI_wchar_t* buffer, WINAPI_wchar_t* format);
  WINAPI_RET_EOF                _swscanf_l(                                                       WINAPI_wchar_t* buffer, WINAPI_wchar_t* format, _locale_t locale);
  int                           sprintf(                                                          char* buffer, WINAPI_char* format);
  int                           _sprintf_l(                                                       char* buffer, WINAPI_char* format, _locale_t locale);
  int                           swprintf(                                                         wchar_t* buffer, size_t count, WINAPI_wchar_t* format);
  int                           _swprintf(                                                        wchar_t* buffer, WINAPI_wchar_t* format);
  int                           __swprintf_l(                                                     wchar_t* buffer, WINAPI_wchar_t* format, _locale_t locale);
  int                           _sprintf_p(                                                       char* buffer, size_t sizeOfBuffer, WINAPI_char* format);
  int                           _sprintf_p_l(                                                     char* buffer, size_t sizeOfBuffer, WINAPI_char* format, _locale_t locale);
  int                           _swprintf_p(                                                      wchar_t* buffer, size_t sizeOfBuffer, WINAPI_wchar_t* format);
  int                           _swprintf_p_l(                                                    wchar_t* buffer, size_t sizeOfBuffer, WINAPI_wchar_t* format, _locale_t locale);
  char*                         strcat(                                                           char* strDestination, WINAPI_char* strSource);
  wchar_t*                      wcscat(                                                           wchar_t* strDestination, WINAPI_wchar_t* strSource);
  unsigned char*                _mbscat(                                                          unsigned char* strDestination, WINAPI_unsigned char* strSource);
  errno_t                       strcat_s(                                                         char* strDestination, size_t numberOfElements, WINAPI_char* strSource);
  errno_t                       wcscat_s(                                                         wchar_t* strDestination, size_t numberOfElements, WINAPI_wchar_t* strSource);
  errno_t                       _mbscat_s(                                                        unsigned char* strDestination, size_t numberOfElements, WINAPI_unsigned char* strSource);
  char*                         strchr(                                                           WINAPI_char* str, int c);
  wchar_t*                      wcschr(                                                           WINAPI_wchar_t* str, wchar_t c);
  unsigned char*                _mbschr(                                                          WINAPI_unsigned char* str, unsigned int c);
  unsigned char*                _mbschr_l(                                                        WINAPI_unsigned char* str, unsigned int c, _locale_t locale);
  int                           strcmp(                                                           WINAPI_char* string1, WINAPI_char* string2);
  int                           wcscmp(                                                           WINAPI_wchar_t* string1, WINAPI_wchar_t* string2);
  WINAPI__NLSCMPERROR           _mbscmp(                                                          WINAPI_unsigned char* string1, WINAPI_unsigned char* string2);
  char*                         strcpy(                                                           char* strDestination, WINAPI_char* strSource);
  wchar_t*                      wcscpy(                                                           wchar_t* strDestination, WINAPI_wchar_t* strSource);
  unsigned char*                _mbscpy(                                                          unsigned char* strDestination, WINAPI_unsigned char* strSource);
  errno_t                       strcpy_s(                                                         char* strDestination, size_t numberOfElements, WINAPI_char* strSource);
  errno_t                       wcscpy_s(                                                         wchar_t* strDestination, size_t numberOfElements, WINAPI_wchar_t* strSource);
  errno_t                       _mbscpy_s(                                                        unsigned char* strDestination, size_t numberOfElements, WINAPI_unsigned char* strSource);
  size_t                        strcspn(                                                          WINAPI_char* str, WINAPI_char* strCharSet);
  size_t                        wcscspn(                                                          WINAPI_wchar_t* str, WINAPI_wchar_t* strCharSet);
  size_t                        _mbscspn(                                                         WINAPI_unsigned char* str, WINAPI_unsigned char* strCharSet);
  size_t                        _mbscspn_l(                                                       WINAPI_unsigned char* str, WINAPI_unsigned char* strCharSet, _locale_t locale);
  char*                         _strdup(                                                          WINAPI_char* strSource);
  wchar_t*                      _wcsdup(                                                          WINAPI_wchar_t* strSource);
  unsigned char*                _mbsdup(                                                          WINAPI_unsigned char* strSource);
  char*                         strerror(                                                         int errnum);
  char*                         _strerror(                                                        WINAPI_char* strErrMsg);
  wchar_t*                      _wcserror(                                                        int errnum);
  wchar_t*                      __wcserror(                                                       WINAPI_wchar_t* strErrMsg);
  errno_t                       strerror_s(                                                       char* buffer, size_t numberOfElements, int errnum);
  errno_t                       _strerror_s(                                                      char* buffer, size_t numberOfElements, WINAPI_char* strErrMsg);
  errno_t                       _wcserror_s(                                                      wchar_t* buffer, size_t numberOfElements, int errnum);
  errno_t                       __wcserror_s(                                                     wchar_t* buffer, size_t numberOfElements, WINAPI_wchar_t* strErrMsg);
  size_t                        strnlen(                                                          WINAPI_char* str, size_t numberOfElements);
  size_t                        wcsnlen(                                                          WINAPI_wchar_t* str, size_t numberOfElements);
  size_t                        _mbsnlen(                                                         WINAPI_unsigned char* str, size_t numberOfElements);
  size_t                        _mbsnlen_l(                                                       WINAPI_unsigned char* str, size_t numberOfElements, _locale_t locale);
  size_t                        _mbstrnlen(                                                       WINAPI_char* str, size_t numberOfElements);
  size_t                        _mbstrnlen_l(                                                     WINAPI_char* str, size_t numberOfElements, _locale_t locale);
  char*                         _strlwr(                                                          char* str);
  wchar_t*                      _wcslwr(                                                          wchar_t* str);
  unsigned char*                _mbslwr(                                                          unsigned char* str);
  char*                         _strlwr_l(                                                        char* str, _locale_t locale);
  wchar_t*                      _wcslwr_l(                                                        wchar_t* str, _locale_t locale);
  unsigned char*                _mbslwr_l(                                                        unsigned char* str, _locale_t locale);
  char*                         strncat(                                                          char* strDest, WINAPI_char* strSource, size_t count);
  wchar_t*                      wcsncat(                                                          wchar_t* strDest, WINAPI_wchar_t* strSource, size_t count);
  unsigned char*                _mbsncat(                                                         unsigned char* strDest, WINAPI_unsigned char* strSource, size_t count);
  unsigned char*                _mbsncat_l(                                                       unsigned char* strDest, WINAPI_unsigned char* strSource, size_t count, _locale_t locale);
  errno_t                       strncat_s(                                                        char* strDest, size_t numberOfElements, WINAPI_char* strSource, size_t count);
  errno_t                       wcsncat_s(                                                        wchar_t* strDest, size_t numberOfElements, WINAPI_wchar_t* strSource, size_t count);
  errno_t                       _mbsncat_s(                                                       unsigned char* strDest, size_t numberOfElements, WINAPI_unsigned char* strSource, size_t count);
  errno_t                       _mbsncat_s_l(                                                     unsigned char* strDest, size_t numberOfElements, WINAPI_unsigned char* strSource, size_t count, _locale_t locale);
  int                           strncmp(                                                          WINAPI_char* string1, WINAPI_char* string2, size_t count);
  int                           wcsncmp(                                                          WINAPI_wchar_t* string1, WINAPI_wchar_t* string2, size_t count);
  WINAPI__NLSCMPERROR           _mbsncmp(                                                         WINAPI_unsigned char* string1, WINAPI_unsigned char* string2, size_t count);
  WINAPI__NLSCMPERROR           _mbsncmp_l(                                                       WINAPI_unsigned char* string1, WINAPI_unsigned char* string2, size_t count, _locale_t locale);
  char*                         strncpy(                                                          char* strDest, WINAPI_char* strSource, size_t count);
  wchar_t*                      wcsncpy(                                                          wchar_t* strDest, WINAPI_wchar_t* strSource, size_t count);
  unsigned char*                _mbsncpy(                                                         unsigned char* strDest, WINAPI_unsigned char* strSource, size_t count);
  unsigned char*                _mbsncpy_l(                                                       unsigned char* strDest, WINAPI_unsigned char* strSource, size_t count, _locale_t locale);
  errno_t                       strncpy_s(                                                        char* strDest, size_t numberOfElements, WINAPI_char* strSource, size_t count);
  errno_t                       wcsncpy_s(                                                        wchar_t* strDest, size_t numberOfElements, WINAPI_wchar_t* strSource, size_t count);
  errno_t                       _mbsncpy_s(                                                       unsigned char* strDest, size_t numberOfElements, WINAPI_unsigned char* strSource, size_t count);
  errno_t                       _mbsncpy_s_l(                                                     unsigned char* strDest, size_t numberOfElements, WINAPI_unsigned char* strSource, size_t count, _locale_t locale);
  char*                         _strnset(                                                         char* str, int c, size_t count);
  wchar_t*                      _wcsnset(                                                         wchar_t* str, wchar_t c, size_t count);
  unsigned char*                _mbsnset(                                                         unsigned char* str, unsigned int c, size_t count);
  unsigned char*                _mbsnset_l(                                                       unsigned char* str, unsigned int c, size_t count, _locale_t locale);
  char*                         strpbrk(                                                          WINAPI_char* str, WINAPI_char* strCharSet);
  wchar_t*                      wcspbrk(                                                          WINAPI_wchar_t* str, WINAPI_wchar_t* strCharSet);
  unsigned char*                _mbspbrk(                                                         WINAPI_unsigned char* str, WINAPI_unsigned char* strCharSet);
  unsigned char*                _mbspbrk_l(                                                       WINAPI_unsigned char* str, WINAPI_unsigned char* strCharSet, _locale_t locale);
  char*                         strrchr(                                                          WINAPI_char* str, int c);
  wchar_t*                      wcsrchr(                                                          WINAPI_wchar_t* str, wchar_t c);
  unsigned char*                _mbsrchr(                                                         WINAPI_unsigned char* str, unsigned int c);
  unsigned char*                _mbsrchr_l(                                                       WINAPI_unsigned char* str, unsigned int c, _locale_t locale);
  char*                         _strrev(                                                          char* str);
  wchar_t*                      _wcsrev(                                                          wchar_t* str);
  unsigned char*                _mbsrev(                                                          unsigned char* str);
  unsigned char*                _mbsrev_l(                                                        unsigned char* str, _locale_t locale);
  char*                         _strset(                                                          char* str, int c);
  wchar_t*                      _wcsset(                                                          wchar_t* str, wchar_t c);
  unsigned char*                _mbsset(                                                          unsigned char* str, unsigned int c);
  unsigned char*                _mbsset_l(                                                        unsigned char* str, unsigned int c, _locale_t locale);
  size_t                        strspn(                                                           WINAPI_char* str, WINAPI_char* strCharSet);
  size_t                        wcsspn(                                                           WINAPI_wchar_t* str, WINAPI_wchar_t* strCharSet);
  size_t                        _mbsspn(                                                          WINAPI_unsigned char* str, WINAPI_unsigned char* strCharSet);
  size_t                        _mbsspn_l(                                                        WINAPI_unsigned char* str, WINAPI_unsigned char* strCharSet, _locale_t locale);
  char*                         strstr(                                                           WINAPI_char* str, WINAPI_char* strSearch);
  wchar_t*                      wcsstr(                                                           WINAPI_wchar_t* str, WINAPI_wchar_t* strSearch);
  unsigned char*                _mbsstr(                                                          WINAPI_unsigned char* str, WINAPI_unsigned char* strSearch);
  unsigned char*                _mbsstr_l(                                                        WINAPI_unsigned char* str, WINAPI_unsigned char* strSearch, _locale_t locale);
  char*                         strtok(                                                           char* strToken, WINAPI_char* strDelimit);
  wchar_t*                      wcstok(                                                           wchar_t* strToken, WINAPI_wchar_t* strDelimit);
  unsigned char*                _mbstok(                                                          unsigned char* strToken, WINAPI_unsigned char* strDelimit);
  unsigned char*                _mbstok_l(                                                        unsigned char* strToken, WINAPI_unsigned char* strDelimit, _locale_t locale);
  char*                         strtok_s(                                                         char* strToken, WINAPI_char* strDelimit, char** context);
  wchar_t*                      wcstok_s(                                                         wchar_t* strToken, WINAPI_wchar_t* strDelimit, wchar_t** context);
  unsigned char*                _mbstok_s(                                                        unsigned char* strToken, WINAPI_unsigned char* strDelimit, char** context);
  unsigned char*                _mbstok_s_l(                                                      unsigned char* strToken, WINAPI_unsigned char* strDelimit, char** context, _locale_t locale);
  char*                         _strupr(                                                          char* str);
  wchar_t*                      _wcsupr(                                                          wchar_t* str);
  unsigned char*                _mbsupr(                                                          unsigned char* str);
  char*                         _strupr_l(                                                        char* str, _locale_t locale);
  wchar_t*                      _wcsupr_l(                                                        wchar_t* str, _locale_t locale);
  unsigned char*                _mbsupr_l(                                                        unsigned char* str, _locale_t locale);
  int                           vsprintf(                                                         char* buffer, WINAPI_char* format, va_list argptr);
  int                           _vsprintf_l(                                                      char* buffer, WINAPI_char* format, _locale_t locale, va_list argptr);
  int                           vswprintf(                                                        wchar_t* buffer, WINAPI_wchar_t* format, va_list argptr);
  int                           _vswprintf(                                                       wchar_t* buffer, WINAPI_wchar_t* format, va_list argptr);
  int                           _vswprintf_l(                                                     wchar_t* buffer, size_t count, WINAPI_wchar_t* format, _locale_t locale, va_list argptr);
  int                           __vswprintf_l(                                                    wchar_t* buffer, WINAPI_wchar_t* format, _locale_t locale, va_list argptr);
  int                           _vsprintf_p(                                                      char* buffer, size_t sizeInBytes, WINAPI_char* format, va_list argptr);
  int                           _vsprintf_p_l(                                                    char* buffer, size_t sizeInBytes, WINAPI_char* format, _locale_t locale, va_list argptr);
  int                           _vswprintf_p(                                                     wchar_t* buffer, size_t count, WINAPI_wchar_t* format, va_list argptr);
  int                           _vswprintf_p_l(                                                   wchar_t* buffer, size_t count, WINAPI_wchar_t* format, _locale_t locale, va_list argptr);
  int                           vsnprintf(                                                        char* buffer, size_t count, WINAPI_char* format, va_list argptr);
  int                           _vsnprintf(                                                       char* buffer, size_t count, WINAPI_char* format, va_list argptr);
  int                           _vsnprintf_l(                                                     char* buffer, size_t count, WINAPI_char* format, _locale_t locale, va_list argptr);
  int                           _vsnwprintf(                                                      wchar_t* buffer, size_t count, WINAPI_wchar_t* format, va_list argptr);
  int                           _vsnwprintf_l(                                                    wchar_t* buffer, size_t count, WINAPI_wchar_t* format, _locale_t locale, va_list argptr);
  size_t                        strlen(                                                           WINAPI_char* str);
  size_t                        _mbslen(                                                          WINAPI_unsigned char* str);
  size_t                        _mbslen_l(                                                        WINAPI_unsigned char* str, _locale_t locale);
  size_t                        _mbstrlen(                                                        WINAPI_char* str);
  size_t                        _mbstrlen_l(                                                      WINAPI_char* str, _locale_t locale);
  size_t                        wcslen(                                                           WINAPI_wchar_t* str);
  size_t                        _mbclen(                                                          WINAPI_unsigned char* c);
  int                           mblen(                                                            WINAPI_char* mbstr, size_t count);
  int                           _mblen_l(                                                         WINAPI_char* mbstr, size_t count, _locale_t locale);
  WINAPI__NLSCMPERROR           strcoll(                                                          WINAPI_char* string1, WINAPI_char* string2);
  WINAPI__NLSCMPERROR           wcscoll(                                                          WINAPI_wchar_t* string1, WINAPI_wchar_t* string2);
  WINAPI__NLSCMPERROR           _mbscoll(                                                         WINAPI_unsigned char* string1, WINAPI_unsigned char* string2);
  WINAPI__NLSCMPERROR           _strcoll_l(                                                       WINAPI_char* string1, WINAPI_char* string2, _locale_t locale);
  WINAPI__NLSCMPERROR           _wcscoll_l(                                                       WINAPI_wchar_t* string1, WINAPI_wchar_t* string2, _locale_t locale);
  WINAPI__NLSCMPERROR           _mbscoll_l(                                                       WINAPI_unsigned char* string1, WINAPI_unsigned char* string2, _locale_t locale);
  WINAPI__NLSCMPERROR           _stricoll(                                                        WINAPI_char* string1, WINAPI_char* string2);
  WINAPI__NLSCMPERROR           _wcsicoll(                                                        WINAPI_wchar_t* string1, WINAPI_wchar_t* string2);
  WINAPI__NLSCMPERROR           _mbsicoll(                                                        WINAPI_unsigned char* string1, WINAPI_unsigned char* string2);
  WINAPI__NLSCMPERROR           _stricoll_l(                                                      WINAPI_char* string1, WINAPI_char* string2, _locale_t locale);
  WINAPI__NLSCMPERROR           _wcsicoll_l(                                                      WINAPI_wchar_t* string1, WINAPI_wchar_t* string2, _locale_t locale);
  WINAPI__NLSCMPERROR           _mbsicoll_l(                                                      WINAPI_unsigned char* string1, WINAPI_unsigned char* string2, _locale_t locale);
  WINAPI__NLSCMPERROR           _strncoll(                                                        WINAPI_char* string1, WINAPI_char* string2, size_t count);
  WINAPI__NLSCMPERROR           _wcsncoll(                                                        WINAPI_wchar_t* string1, WINAPI_wchar_t* string2, size_t count);
  WINAPI__NLSCMPERROR           _mbsncoll(                                                        WINAPI_unsigned char* string1, WINAPI_unsigned char* string2, size_t count);
  WINAPI__NLSCMPERROR           _strncoll_l(                                                      WINAPI_char* string1, WINAPI_char* string2, size_t count, _locale_t locale);
  WINAPI__NLSCMPERROR           _wcsncoll_l(                                                      WINAPI_wchar_t* string1, WINAPI_wchar_t* string2, size_t count, _locale_t locale);
  WINAPI__NLSCMPERROR           _mbsncoll_l(                                                      WINAPI_unsigned char* string1, WINAPI_unsigned char* string2, size_t count, _locale_t locale);
  WINAPI__NLSCMPERROR           _strnicoll(                                                       WINAPI_char* string1, WINAPI_char* string2, size_t count);
  WINAPI__NLSCMPERROR           _wcsnicoll(                                                       WINAPI_wchar_t* string1, WINAPI_wchar_t* string2, size_t count);
  WINAPI__NLSCMPERROR           _mbsnicoll(                                                       WINAPI_unsigned char* string1, WINAPI_unsigned char* string2, size_t count);
  WINAPI__NLSCMPERROR           _strnicoll_l(                                                     WINAPI_char* string1, WINAPI_char* string2, size_t count, _locale_t locale);
  WINAPI__NLSCMPERROR           _wcsnicoll_l(                                                     WINAPI_wchar_t* string1, WINAPI_wchar_t* string2, size_t count, _locale_t locale);
  WINAPI__NLSCMPERROR           _mbsnicoll_l(                                                     WINAPI_unsigned char* string1, WINAPI_unsigned char* string2, size_t count, _locale_t locale);
  WINAPI__NLSCMPERROR           _strcmpi(                                                         WINAPI_char* string1, WINAPI_char* string2);
  WINAPI__NLSCMPERROR           _stricmp(                                                         WINAPI_char* string1, WINAPI_char* string2);
  WINAPI__NLSCMPERROR           _wcsicmp(                                                         WINAPI_wchar_t* string1, WINAPI_wchar_t* string2);
  WINAPI__NLSCMPERROR           _mbsicmp(                                                         WINAPI_unsigned char* string1, WINAPI_unsigned char* string2);
  WINAPI__NLSCMPERROR           _stricmp_l(                                                       WINAPI_char* string1, WINAPI_char* string2, _locale_t locale);
  WINAPI__NLSCMPERROR           _wcsicmp_l(                                                       WINAPI_wchar_t* string1, WINAPI_wchar_t* string2, _locale_t locale);
  WINAPI__NLSCMPERROR           _mbsicmp_l(                                                       WINAPI_unsigned char* string1, WINAPI_unsigned char* string2, _locale_t locale);
  WINAPI__NLSCMPERROR           _wcsnicmp_l(                                                      WINAPI_wchar_t* string1, WINAPI_wchar_t* string2, size_t count, _locale_t locale);
  WINAPI__NLSCMPERROR           _mbsnicmp_l(                                                      WINAPI_unsigned char* string1, WINAPI_unsigned char* string2, size_t count, _locale_t locale);
  WINAPI__NLSCMPERROR           _mbsnicmp(                                                        WINAPI_unsigned char* string1, WINAPI_unsigned char* string2, size_t count);
  WINAPI__NLSCMPERROR           _strnicmp_l(                                                      WINAPI_char* string1, WINAPI_char* string2, size_t count, _locale_t locale);
  WINAPI__NLSCMPERROR           _wcsnicmp(                                                        WINAPI_wchar_t* string1, WINAPI_wchar_t* string2, size_t count);
  WINAPI__NLSCMPERROR           _strnicmp(                                                        WINAPI_char* string1, WINAPI_char* string2, size_t count);
  errno_t                       _strupr_s(                                                        char* str, size_t numberOfElements);
  errno_t                       _wcsupr_s(                                                        wchar_t* str, size_t numberOfElements);
  errno_t                       _strupr_s_l(                                                      char* str, size_t numberOfElements, _locale_t locale);
  errno_t                       _wcsupr_s_l(                                                      wchar_t* str, size_t numberOfElements, _locale_t locale);
  errno_t                       _mbsupr_s(                                                        unsigned char* str, size_t numberOfElements);
  errno_t                       _mbsupr_s_l(                                                      unsigned char* str, size_t numberOfElements, _locale_t locale);
  errno_t                       _strlwr_s(                                                        char* str, size_t numberOfElements);
  errno_t                       _strlwr_s_l(                                                      char* str, size_t numberOfElements, _locale_t locale);
  errno_t                       _mbslwr_s(                                                        unsigned char* str, size_t numberOfElements);
  errno_t                       _mbslwr_s_l(                                                      unsigned char* str, size_t numberOfElements, _locale_t locale);
  errno_t                       _wcslwr_s(                                                        wchar_t* str, size_t numberOfElements);
  errno_t                       _wcslwr_s_l(                                                      wchar_t* str, size_t numberOfElements, _locale_t locale);
  WINAPI_RET_EOF                _snscanf_s(                                                       WINAPI_char* input, size_t length, WINAPI_char* format);
  WINAPI_RET_EOF                _snscanf_s_l(                                                     WINAPI_char* input, size_t length, WINAPI_char* format, _locale_t locale);
  WINAPI_RET_EOF                _snwscanf_s(                                                      WINAPI_wchar_t* input, size_t length, WINAPI_wchar_t* format);
  WINAPI_RET_EOF                _snwscanf_s_l(                                                    WINAPI_wchar_t* input, size_t length, WINAPI_wchar_t* format, _locale_t locale);
  int                           _vsnprintf_s(                                                     char* buffer, size_t sizeOfBuffer, size_t count, WINAPI_char* format, va_list argptr);
  int                           _vsnprintf_s_l(                                                   char* buffer, size_t sizeOfBuffer, size_t count, WINAPI_char* format, _locale_t locale, va_list argptr);
  int                           _vsnwprintf_s(                                                    wchar_t* buffer, size_t sizeOfBuffer, size_t count, WINAPI_wchar_t* format, va_list argptr);
  int                           _vsnwprintf_s_l(                                                  wchar_t* buffer, size_t sizeOfBuffer, size_t count, WINAPI_wchar_t* format, _locale_t locale, va_list argptr);
  int                           swprintf_s(                                                       wchar_t* buffer, size_t sizeOfBuffer, WINAPI_wchar_t* format);
  int                           _swprintf_s_l(                                                    wchar_t* buffer, size_t sizeOfBuffer, WINAPI_wchar_t* format, _locale_t locale);
  int                           _sprintf_s_l(                                                     char* buffer, size_t sizeOfBuffer, WINAPI_char* format, _locale_t locale);
  int                           sprintf_s(                                                        char* buffer, size_t sizeOfBuffer, WINAPI_char* format);
  WINAPI_RET_EOF                _swscanf_s_l(                                                     WINAPI_wchar_t* buffer, WINAPI_wchar_t* format, _locale_t locale);
  WINAPI_RET_EOF                swscanf_s(                                                        WINAPI_wchar_t* buffer, WINAPI_wchar_t* format);
  WINAPI_RET_EOF                _sscanf_s_l(                                                      WINAPI_char* buffer, WINAPI_char* format, _locale_t locale);
  WINAPI_RET_EOF                sscanf_s(                                                         WINAPI_char* buffer, WINAPI_char* format);
  int                           vswprintf_s(                                                      wchar_t* buffer, size_t numberOfElements, WINAPI_wchar_t* format, va_list argptr);
  int                           _vswprintf_s_l(                                                   wchar_t* buffer, size_t numberOfElements, WINAPI_wchar_t* format, _locale_t locale, va_list argptr);
  int                           _vsprintf_s_l(                                                    char* buffer, size_t numberOfElements, WINAPI_char* format, _locale_t locale, va_list argptr);
  int                           vsprintf_s(                                                       char* buffer, size_t numberOfElements, WINAPI_char* format, va_list argptr);
  char*                         _strdup_dbg(                                                      WINAPI_char* strSource, WINAPI_DBG_BLOCK_TYPE blockType, WINAPI_char* filename, int linenumber);
  wchar_t*                      _wcsdup_dbg(                                                      WINAPI_wchar_t* strSource, WINAPI_DBG_BLOCK_TYPE blockType, WINAPI_char* filename, int linenumber);
  WINAPI_size_t_INT_MAX         strxfrm(                                                          char* strDest, WINAPI_char* strSource, size_t count);
  WINAPI_size_t_INT_MAX         wcsxfrm(                                                          wchar_t* strDest, WINAPI_wchar_t* strSource, size_t count);
  WINAPI_size_t_INT_MAX         _strxfrm_l(                                                       char* strDest, WINAPI_char* strSource, size_t count, _locale_t locale);
  WINAPI_size_t_INT_MAX         _wcsxfrm_l(                                                       wchar_t* strDest, WINAPI_wchar_t* strSource, size_t count, _locale_t locale);
  size_t                        mbrlen(                                                           WINAPI_char* str, size_t maxSize, mbstate_t mbstate);
  WINAPI__NLSCMPERROR           _mbsnbcoll(                                                       WINAPI_unsigned char* string1, WINAPI_unsigned char* string2, size_t count);
  WINAPI__NLSCMPERROR           _mbsnbcoll_l(                                                     WINAPI_unsigned char* string1, WINAPI_unsigned char* string2, size_t count, _locale_t locale);
  WINAPI__NLSCMPERROR           _mbsnbicoll(                                                      WINAPI_unsigned char* string1, WINAPI_unsigned char* string2, size_t count);
  WINAPI__NLSCMPERROR           _mbsnbicoll_l(                                                    WINAPI_unsigned char* string1, WINAPI_unsigned char* string2, size_t count, _locale_t locale);
  errno_t                       _mbsnbset_s(                                                      unsigned char* str, size_t size, unsigned int c, size_t count);
  errno_t                       _mbsnbset_s_l(                                                    unsigned char* str, size_t size, unsigned int c, size_t count, _locale_t locale);
  int                           _scprintf_p(                                                      WINAPI_char* format);
  int                           _scprintf_p_l(                                                    WINAPI_char* format, _locale_t locale);
  int                           _scwprintf_p(                                                     WINAPI_wchar_t* format);
  int                           _scwprintf_p_l(                                                   WINAPI_wchar_t* format, _locale_t locale);
  int                           _snprintf_s(                                                      char* buffer, size_t sizeOfBuffer, size_t count, WINAPI_char* format);
  int                           _snprintf_s_l(                                                    char* buffer, size_t sizeOfBuffer, size_t count, WINAPI_char* format, _locale_t locale);
  int                           _snwprintf_s(                                                     wchar_t* buffer, size_t sizeOfBuffer, size_t count, WINAPI_wchar_t* format);
  int                           _snwprintf_s_l(                                                   wchar_t* buffer, size_t sizeOfBuffer, size_t count, WINAPI_wchar_t* format, _locale_t locale);
  int                           _snprintf(                                                        char* buffer, size_t count, WINAPI_char* format);
  int                           _snprintf_l(                                                      char* buffer, size_t count, WINAPI_char* format, _locale_t locale);
  int                           _snwprintf(                                                       wchar_t* buffer, size_t count, WINAPI_wchar_t* format);
  int                           _snwprintf_l(                                                     wchar_t* buffer, size_t count, WINAPI_wchar_t* format, _locale_t locale);
  errno_t                       _strnset_s(                                                       char* str, size_t numberOfElements, int c, size_t count);
  errno_t                       _wcsnset_s(                                                       wchar_t* str, size_t numberOfElements, wchar_t c, size_t count);
  errno_t                       _mbsnset_s(                                                       unsigned char* str, size_t numberOfElements, unsigned int c, size_t count);
  errno_t                       _mbsnset_s_l(                                                     unsigned char* str, size_t numberOfElements, unsigned int c, size_t count, _locale_t locale);
  errno_t                       _strset_s(                                                        char* str, size_t numberOfElements, int c);
  errno_t                       _wcsset_s(                                                        wchar_t* str, size_t numberOfElements, wchar_t c);
  errno_t                       _mbsset_s(                                                        unsigned char* str, size_t numberOfElements, unsigned int c);
  errno_t                       _mbsset_s_l(                                                      unsigned char* str, size_t numberOfElements, unsigned int c, _locale_t locale);
  int                           _findclose(                                                       intptr_t handle);
  intptr_t                      _findfirst(                                                       WINAPI_char* filespec, struct _finddata_t* fileinfo);
  intptr_t                      _findfirst32(                                                     WINAPI_char* filespec, struct _finddata32_t* fileinfo);
  intptr_t                      _findfirst64(                                                     WINAPI_char* filespec, struct __finddata64_t* fileinfo);
  intptr_t                      _findfirsti64(                                                    WINAPI_char* filespec, struct _finddatai64_t* fileinfo);
  intptr_t                      _findfirst32i64(                                                  WINAPI_char* filespec, struct _finddata32i64_t* fileinfo);
  intptr_t                      _findfirst64i32(                                                  WINAPI_char* filespec, struct _finddata64i32_t* fileinfo);
  intptr_t                      _wfindfirst(                                                      WINAPI_wchar_t* filespec, struct _wfinddata_t* fileinfo);
  intptr_t                      _wfindfirst32(                                                    WINAPI_wchar_t* filespec, struct _wfinddata32_t* fileinfo);
  intptr_t                      _wfindfirst64(                                                    WINAPI_wchar_t* filespec, struct _wfinddata64_t* fileinfo);
  intptr_t                      _wfindfirsti64(                                                   WINAPI_wchar_t* filespec, struct _wfinddatai64_t* fileinfo);
  intptr_t                      _wfindfirst32i64(                                                 WINAPI_wchar_t* filespec, struct _wfinddata32i64_t* fileinfo);
  intptr_t                      _wfindfirst64i32(                                                 WINAPI_wchar_t* filespec, struct _wfinddata64i32_t* fileinfo);
  int                           _findnext(                                                        intptr_t handle, struct _finddata_t* fileinfo);
  int                           _findnext32(                                                      intptr_t handle, struct _finddata32_t* fileinfo);
  int                           _findnext64(                                                      intptr_t handle, struct __finddata64_t* fileinfo);
  int                           _findnexti64(                                                     intptr_t handle, struct _finddatai64_t* fileinfo);
  int                           _findnext32i64(                                                   intptr_t handle, struct _finddata32i64_t* fileinfo);
  int                           _findnext64i32(                                                   intptr_t handle, struct _finddata64i32_t* fileinfo);
  int                           _wfindnext(                                                       intptr_t handle, struct _wfinddata_t* fileinfo);
  int                           _wfindnext32(                                                     intptr_t handle, struct _wfinddata32_t* fileinfo);
  int                           _wfindnext64(                                                     intptr_t handle, struct _wfinddata64_t* fileinfo);
  int                           _wfindnexti64(                                                    intptr_t handle, struct _wfinddatai64_t* fileinfo);
  int                           _wfindnext32i64(                                                  intptr_t handle, struct _wfinddatai64_t* fileinfo);
  int                           _wfindnext64i32(                                                  intptr_t handle, struct _wfinddata64i32_t* fileinfo);
  char*                         asctime(                                                          WINAPI_struct tm* timeptr);
  wchar_t*                      _wasctime(                                                        WINAPI_struct tm* timeptr);
  errno_t                       asctime_s(                                                        char* buffer, size_t numberOfElements, WINAPI_struct tm* _tm);
  errno_t                       _wasctime_s(                                                      wchar_t* buffer, size_t numberOfElements);
  clock_t                       clock(                                                            );
  char*                         ctime(                                                            WINAPI_time_t* timer);
  char*                         _ctime32(                                                         WINAPI___time32_t* timer);
  char*                         _ctime64(                                                         WINAPI___time64_t* timer);
  wchar_t*                      _wctime(                                                          WINAPI_time_t* timer);
  wchar_t*                      _wctime32(                                                        WINAPI___time32_t* timer);
  wchar_t*                      _wctime64(                                                        WINAPI___time64_t* timer);
  errno_t                       _ctime32_s(                                                       char* buffer, size_t numberOfElements, WINAPI___time32_t* time);
  errno_t                       _ctime64_s(                                                       char* buffer, size_t numberOfElements, WINAPI___time64_t* time);
  errno_t                       _wctime32_s(                                                      wchar_t* buffer, size_t numberOfElements, WINAPI___time32_t* time);
  errno_t                       _wctime64_s(                                                      wchar_t* buffer, size_t numberOfElements, WINAPI___time64_t* time);
  void                          _ftime(                                                           struct _timeb* timeptr);
  void                          _ftime32(                                                         struct __timeb32* timeptr);
  void                          _ftime64(                                                         struct __timeb64* timeptr);
  errno_t                       _ftime32_s(                                                       struct __timeb32* timeptr);
  errno_t                       _ftime64_s(                                                       struct __timeb64* timeptr);
  int                           _futime(                                                          int fd, struct _utimbuf* filetime);
  int                           _futime32(                                                        int fd, struct __utimbuf32* filetime);
  int                           _futime64(                                                        int fd, struct __utimbuf64* filetime);
  struct tm*                    gmtime(                                                           WINAPI_time_t* timer);
  struct tm*                    _gmtime32(                                                        WINAPI___time32_t* timer);
  struct tm*                    _gmtime64(                                                        WINAPI___time64_t* timer);
  errno_t                       _gmtime32_s(                                                      struct tm* _tm, WINAPI___time32_t* time);
  errno_t                       _gmtime64_s(                                                      struct tm* _tm, WINAPI___time64_t* time);
  struct tm*                    localtime(                                                        WINAPI_time_t* timer);
  struct tm*                    _localtime32(                                                     WINAPI___time32_t* timer);
  struct tm*                    _localtime64(                                                     WINAPI___time64_t* timer);
  errno_t                       _localtime32_s(                                                   struct tm* _tm, WINAPI___time32_t* time);
  errno_t                       _localtime64_s(                                                   struct tm* _tm, WINAPI___time64_t* time);
  time_t                        _mkgmtime(                                                        struct tm* timeptr);
  __time32_t                    _mkgmtime32(                                                      struct tm* timeptr);
  __time64_t                    _mkgmtime64(                                                      struct tm* timeptr);
  time_t                        mktime(                                                           struct tm* timeptr);
  __time32_t                    _mktime32(                                                        struct tm* timeptr);
  __time64_t                    _mktime64(                                                        struct tm* timeptr);
  char*                         _strdate(                                                         char* datestr);
  wchar_t*                      _wstrdate(                                                        wchar_t* datestr);
  errno_t                       _strdate_s(                                                       char* buffer, size_t numberOfElements);
  errno_t                       _wstrdate_s(                                                      wchar_t* buffer, size_t numberOfElements);
  char*                         _strtime(                                                         char* timestr);
  wchar_t*                      _wstrtime(                                                        wchar_t* timestr);
  errno_t                       _strtime_s(                                                       char* buffer, size_t numberOfElements);
  errno_t                       _wstrtime_s(                                                      wchar_t* buffer, size_t numberOfElements);
  time_t                        time(                                                             time_t* timer);
  __time32_t                    _time32(                                                          __time32_t* timer);
  __time64_t                    _time64(                                                          __time64_t* timer);
  void                          _tzset(                                                           );
  int                           _utime(                                                           WINAPI_char* filename, struct _utimbuf* times);
  int                           _utime32(                                                         WINAPI_char* filename, struct __utimbuf32* times);
  int                           _utime64(                                                         WINAPI_char* filename, struct __utimbuf64* times);
  int                           _wutime(                                                          WINAPI_wchar_t* filename, struct _utimbuf* times);
  int                           _wutime32(                                                        WINAPI_wchar_t* filename, struct __utimbuf32* times);
  int                           _wutime64(                                                        WINAPI_wchar_t* filename, struct __utimbuf64* times);
  double                        _difftime32(                                                      __time32_t timer1, __time32_t timer0);
  double                        _difftime64(                                                      __time64_t timer1, __time64_t timer0);
  double                        difftime(                                                         time_t timer1, time_t timer0);
  size_t                        strftime(                                                         char* strDest, size_t maxsize, WINAPI_char* format, WINAPI_struct tm* timeptr);
  size_t                        _strftime_l(                                                      char* strDest, size_t maxsize, WINAPI_char* format, WINAPI_struct tm* timeptr, _locale_t locale);
  size_t                        wcsftime(                                                         wchar_t* strDest, size_t maxsize, WINAPI_wchar_t* format, WINAPI_struct tm* timeptr);
  size_t                        _wcsftime_l(                                                      wchar_t* strDest, size_t maxsize, WINAPI_wchar_t* format, WINAPI_struct tm* timeptr, _locale_t locale);
  errno_t                       _get_dstbias(                                                     int* seconds);
  errno_t                       _get_daylight(                                                    int* hours);
  errno_t                       _get_timezone(                                                    long* seconds);
  errno_t                       _get_tzname(                                                      size_t* pReturnValue, char* timeZoneName, size_t sizeInBytes, int index);
  unsigned                      _getsystime(                                                      struct tm* _tm);
  unsigned                      _setsystime(                                                      struct tm* _tm, unsigned millisec);
  WINAPI_output_format          _get_output_format(                                               );
  WINAPI_output_format          _set_output_format(                                               WINAPI_output_format format);
  int                           _get_printf_count_output(                                         );
  int                           _set_printf_count_output(                                         int enable);
  void                          _lock(                                                            WINAPI_LOCK_NUM locknum);
  void                          _unlock(                                                          WINAPI_LOCK_NUM locknum);
  void                          _initterm(                                                        _PVFV* pfbegin, _PVFV* pfend);
  int                           _initterm_e(                                                      _PVFV* pfbegin, _PVFV* pfend);
  PVOID                         __RTDynamicCast(                                                  PVOID inptr, LONG VfDelta, PVOID SrcType, PVOID TargetType, BOOL isReference);
  int*                          __p__commode(                                                     );
  void                          _beep(                                                            unsigned frequency, unsigned duration);
]]
return ffi.load( 'msvcrxx.dll' )
