require( 'ffi/winapi/headers/windows' )
local ffi = require( 'ffi' )
ffi.cdef [[
  typedef LPVOID PSTORAGE_DEPENDENCY_INFO; //Alias
  typedef LPVOID PGET_VIRTUAL_DISK_INFO; //Alias
  typedef UINT MERGE_VIRTUAL_DISK_VERSION; //Alias
  static const UINT MERGE_VIRTUAL_DISK_VERSION_UNSPECIFIED = 0;
  static const UINT MERGE_VIRTUAL_DISK_VERSION_1 = 1;
  typedef ULONG WINAPI_VirtMergeDepth; //Alias
  typedef struct WINAPI_MERGE_VIRTUAL_DISK_PARAMETERS_u_s {
    WINAPI_VirtMergeDepth MergeDepth;
  } WINAPI_MERGE_VIRTUAL_DISK_PARAMETERS_u_s;
  typedef union WINAPI_MERGE_VIRTUAL_DISK_PARAMETERS_u {
    WINAPI_MERGE_VIRTUAL_DISK_PARAMETERS_u_s Version1;
  } WINAPI_MERGE_VIRTUAL_DISK_PARAMETERS_u;
  typedef struct MERGE_VIRTUAL_DISK_PARAMETERS {
    MERGE_VIRTUAL_DISK_VERSION Version;
    WINAPI_MERGE_VIRTUAL_DISK_PARAMETERS_u ;
  } MERGE_VIRTUAL_DISK_PARAMETERS;
  typedef MERGE_VIRTUAL_DISK_PARAMETERS *PMERGE_VIRTUAL_DISK_PARAMETERS; //Pointer
  typedef UINT SET_VIRTUAL_DISK_INFO_VERSION; //Alias
  static const UINT SET_VIRTUAL_DISK_INFO_UNSPECIFIED = 0;
  static const UINT SET_VIRTUAL_DISK_INFO_PARENT_PATH = 1;
  static const UINT SET_VIRTUAL_DISK_INFO_IDENTIFIER = 2;
  typedef union WINAPI_SET_VIRTUAL_DISK_INFO_u {
    PCWSTR ParentFilePath;
    GUID UniqueIdentifier;
  } WINAPI_SET_VIRTUAL_DISK_INFO_u;
  typedef struct SET_VIRTUAL_DISK_INFO {
    SET_VIRTUAL_DISK_INFO_VERSION Version;
    WINAPI_SET_VIRTUAL_DISK_INFO_u ;
  } SET_VIRTUAL_DISK_INFO;
  typedef SET_VIRTUAL_DISK_INFO *PSET_VIRTUAL_DISK_INFO; //Pointer
  typedef UINT CREATE_VIRTUAL_DISK_VERSION; //Alias
  static const UINT CREATE_VIRTUAL_DISK_VERSION_UNSPECIFIED = 0;
  static const UINT CREATE_VIRTUAL_DISK_VERSION_1 = 1;
  typedef struct WINAPI_CREATE_VIRTUAL_DISK_PARAMETERS_u_s {
    GUID UniqueId;
    ULONGLONG MaximumSize;
    ULONG BlockSizeInBytes;
    ULONG SectorSizeInBytes;
    PCWSTR ParentPath;
    PCWSTR SourcePath;
  } WINAPI_CREATE_VIRTUAL_DISK_PARAMETERS_u_s;
  typedef union WINAPI_CREATE_VIRTUAL_DISK_PARAMETERS_u {
    WINAPI_CREATE_VIRTUAL_DISK_PARAMETERS_u_s Version1;
  } WINAPI_CREATE_VIRTUAL_DISK_PARAMETERS_u;
  typedef struct CREATE_VIRTUAL_DISK_PARAMETERS {
    CREATE_VIRTUAL_DISK_VERSION Version;
    WINAPI_CREATE_VIRTUAL_DISK_PARAMETERS_u ;
  } CREATE_VIRTUAL_DISK_PARAMETERS;
  typedef CREATE_VIRTUAL_DISK_PARAMETERS *PCREATE_VIRTUAL_DISK_PARAMETERS; //Pointer
  typedef UINT OPEN_VIRTUAL_DISK_VERSION; //Alias
  static const UINT OPEN_VIRTUAL_DISK_VERSION_UNSPECIFIED = 0;
  static const UINT OPEN_VIRTUAL_DISK_VERSION_1 = 1;
  typedef struct WINAPI_OPEN_VIRTUAL_DISK_PARAMETERS_u_s {
    ULONG RWDepth;
  } WINAPI_OPEN_VIRTUAL_DISK_PARAMETERS_u_s;
  typedef union WINAPI_OPEN_VIRTUAL_DISK_PARAMETERS_u {
    WINAPI_OPEN_VIRTUAL_DISK_PARAMETERS_u_s Version1;
  } WINAPI_OPEN_VIRTUAL_DISK_PARAMETERS_u;
  typedef struct OPEN_VIRTUAL_DISK_PARAMETERS {
    OPEN_VIRTUAL_DISK_VERSION Version;
    WINAPI_OPEN_VIRTUAL_DISK_PARAMETERS_u ;
  } OPEN_VIRTUAL_DISK_PARAMETERS;
  typedef OPEN_VIRTUAL_DISK_PARAMETERS *POPEN_VIRTUAL_DISK_PARAMETERS; //Pointer
  typedef UINT EXPAND_VIRTUAL_DISK_VERSION; //Alias
  static const UINT EXPAND_VIRTUAL_DISK_VERSION_UNSPECIFIED = 0;
  static const UINT EXPAND_VIRTUAL_DISK_VERSION_1 = 1;
  typedef struct WINAPI_EXPAND_VIRTUAL_DISK_PARAMETERS_u_s {
    ULONGLONG NewSize;
  } WINAPI_EXPAND_VIRTUAL_DISK_PARAMETERS_u_s;
  typedef union WINAPI_EXPAND_VIRTUAL_DISK_PARAMETERS_u {
    WINAPI_EXPAND_VIRTUAL_DISK_PARAMETERS_u_s Version1;
  } WINAPI_EXPAND_VIRTUAL_DISK_PARAMETERS_u;
  typedef struct EXPAND_VIRTUAL_DISK_PARAMETERS {
    EXPAND_VIRTUAL_DISK_VERSION Version;
    WINAPI_EXPAND_VIRTUAL_DISK_PARAMETERS_u ;
  } EXPAND_VIRTUAL_DISK_PARAMETERS;
  typedef EXPAND_VIRTUAL_DISK_PARAMETERS *PEXPAND_VIRTUAL_DISK_PARAMETERS; //Pointer
  typedef UINT COMPACT_VIRTUAL_DISK_VERSION; //Alias
  static const UINT COMPACT_VIRTUAL_DISK_VERSION_UNSPECIFIED = 0;
  static const UINT COMPACT_VIRTUAL_DISK_VERSION_1 = 1;
  typedef struct WINAPI_COMPACT_VIRTUAL_DISK_PARAMETERS_u_s {
    ULONG Reserved;
  } WINAPI_COMPACT_VIRTUAL_DISK_PARAMETERS_u_s;
  typedef union WINAPI_COMPACT_VIRTUAL_DISK_PARAMETERS_u {
    WINAPI_COMPACT_VIRTUAL_DISK_PARAMETERS_u_s Version1;
  } WINAPI_COMPACT_VIRTUAL_DISK_PARAMETERS_u;
  typedef struct COMPACT_VIRTUAL_DISK_PARAMETERS {
    COMPACT_VIRTUAL_DISK_VERSION Version;
    WINAPI_COMPACT_VIRTUAL_DISK_PARAMETERS_u ;
  } COMPACT_VIRTUAL_DISK_PARAMETERS;
  typedef COMPACT_VIRTUAL_DISK_PARAMETERS *PCOMPACT_VIRTUAL_DISK_PARAMETERS; //Pointer
  typedef UINT ATTACH_VIRTUAL_DISK_VERSION; //Alias
  static const UINT ATTACH_VIRTUAL_DISK_VERSION_UNSPECIFIED = 0;
  static const UINT ATTACH_VIRTUAL_DISK_VERSION_1 = 1;
  typedef struct WINAPI_ATTACH_VIRTUAL_DISK_PARAMETERS_u_s {
    ULONG Reserved;
  } WINAPI_ATTACH_VIRTUAL_DISK_PARAMETERS_u_s;
  typedef union WINAPI_ATTACH_VIRTUAL_DISK_PARAMETERS_u {
    WINAPI_ATTACH_VIRTUAL_DISK_PARAMETERS_u_s Version1;
  } WINAPI_ATTACH_VIRTUAL_DISK_PARAMETERS_u;
  typedef struct ATTACH_VIRTUAL_DISK_PARAMETERS {
    ATTACH_VIRTUAL_DISK_VERSION Version;
    WINAPI_ATTACH_VIRTUAL_DISK_PARAMETERS_u ;
  } ATTACH_VIRTUAL_DISK_PARAMETERS;
  typedef ATTACH_VIRTUAL_DISK_PARAMETERS *PATTACH_VIRTUAL_DISK_PARAMETERS; //Pointer
  typedef struct VIRTUAL_STORAGE_TYPE {
    ULONG DeviceId;
    GUID VendorId;
  } VIRTUAL_STORAGE_TYPE;
  typedef VIRTUAL_STORAGE_TYPE *PVIRTUAL_STORAGE_TYPE; //Pointer
  typedef struct VIRTUAL_DISK_PROGRESS {
    DWORD OperationStatus;
    ULONGLONG CurrentValue;
    ULONGLONG CompletionValue;
  } VIRTUAL_DISK_PROGRESS;
  typedef VIRTUAL_DISK_PROGRESS *PVIRTUAL_DISK_PROGRESS; //Pointer
  typedef UINT ATTACH_VIRTUAL_DISK_FLAG; //Alias
  typedef UINT COMPACT_VIRTUAL_DISK_FLAG; //Alias
  typedef UINT DETACH_VIRTUAL_DISK_FLAG; //Alias
  typedef UINT EXPAND_VIRTUAL_DISK_FLAG; //Alias
  typedef UINT GET_STORAGE_DEPENDENCY_FLAG; //Alias
  typedef UINT MERGE_VIRTUAL_DISK_FLAG; //Alias
  typedef UINT CREATE_VIRTUAL_DISK_FLAG; //Alias
  typedef UINT OPEN_VIRTUAL_DISK_FLAG; //Alias
  typedef UINT VIRTUAL_DISK_ACCESS_MASK; //Alias
  WINAPI_ERROR_CODE AttachVirtualDisk(               HANDLE VirtualDiskHandle, PSECURITY_DESCRIPTOR SecurityDescriptor, ATTACH_VIRTUAL_DISK_FLAG Flags, ULONG ProviderSpecificFlags, PATTACH_VIRTUAL_DISK_PARAMETERS Parameters, LPOVERLAPPED Overlapped);
  WINAPI_ERROR_CODE CompactVirtualDisk(              HANDLE VirtualDiskHandle, COMPACT_VIRTUAL_DISK_FLAG Flags, PCOMPACT_VIRTUAL_DISK_PARAMETERS Parameters, LPOVERLAPPED Overlapped);
  WINAPI_ERROR_CODE CreateVirtualDisk(               PVIRTUAL_STORAGE_TYPE VirtualStorageType, PCWSTR Path, VIRTUAL_DISK_ACCESS_MASK VirtualDiskAccessMask, PSECURITY_DESCRIPTOR SecurityDescriptor, CREATE_VIRTUAL_DISK_FLAG Flags, ULONG ProviderSpecificFlags, PCREATE_VIRTUAL_DISK_PARAMETERS Parameters, LPOVERLAPPED Overlapped, PHANDLE Handle);
  WINAPI_ERROR_CODE DetachVirtualDisk(               HANDLE VirtualDiskHandle, DETACH_VIRTUAL_DISK_FLAG Flags, ULONG ProviderSpecificFlags);
  WINAPI_ERROR_CODE ExpandVirtualDisk(               HANDLE VirtualDiskHandle, EXPAND_VIRTUAL_DISK_FLAG Flags, PEXPAND_VIRTUAL_DISK_PARAMETERS Parameters, LPOVERLAPPED Overlapped);
  WINAPI_ERROR_CODE GetStorageDependencyInformation( HANDLE ObjectHandle, GET_STORAGE_DEPENDENCY_FLAG Flags, ULONG StorageDependencyInfoSize, PSTORAGE_DEPENDENCY_INFO StorageDependencyInfo, PULONG SizeUsed);
  WINAPI_ERROR_CODE GetVirtualDiskInformation(       HANDLE VirtualDiskHandle, PULONG VirtualDiskInfoSize, PGET_VIRTUAL_DISK_INFO VirtualDiskInfo, PULONG SizeUsed);
  WINAPI_ERROR_CODE GetVirtualDiskOperationProgress( HANDLE VirtualDiskHandle, LPOVERLAPPED Overlapped, PVIRTUAL_DISK_PROGRESS Progress);
  WINAPI_ERROR_CODE GetVirtualDiskPhysicalPath(      HANDLE VirtualDiskHandle, PULONG DiskPathSizeInBytes, PWSTR DiskPath);
  WINAPI_ERROR_CODE MergeVirtualDisk(                HANDLE VirtualDiskHandle, MERGE_VIRTUAL_DISK_FLAG Flags, PMERGE_VIRTUAL_DISK_PARAMETERS Parameters, LPOVERLAPPED Overlapped);
  WINAPI_ERROR_CODE OpenVirtualDisk(                 PVIRTUAL_STORAGE_TYPE VirtualStorageType, PCWSTR Path, VIRTUAL_DISK_ACCESS_MASK VirtualDiskAccessMask, OPEN_VIRTUAL_DISK_FLAG Flags, POPEN_VIRTUAL_DISK_PARAMETERS Parameters, PHANDLE Handle);
  WINAPI_ERROR_CODE SetVirtualDiskInformation(       HANDLE VirtualDiskHandle, PSET_VIRTUAL_DISK_INFO VirtualDiskInfo);
]]
return ffi.load( 'VirtDisk.dll' )
