require( 'ffi/winapi/headers/windows' )
require( 'ffi/winapi/headers/internet' )
local ffi = require( 'ffi' )
ffi.cdef [[
  BOOLAPI                  CommitUrlCacheEntry(                    LPCTSTR lpszUrlName, LPCTSTR lpszLocalFileName, FILETIME ExpireTime, FILETIME LastModifiedTime, WINAPI_CacheEntryType CacheEntryType, LPVOID lpHeaderInfo, DWORD dwHeaderSize, LPCTSTR lpszFileExtension, LPCTSTR lpszOriginalUrl);
  BOOL                     CreateMD5SSOHash(                       PWSTR pszChallengeInfo, PWSTR pwszRealm, PWSTR pwszTarget, PBYTE pbHexHash);
  BOOLAPI                  CreateUrlCacheEntry(                    LPCTSTR lpszUrlName, DWORD dwExpectedFileSize, LPCTSTR lpszFileExtension, LPTSTR lpszFileName, DWORD dwReserved);
  GROUPID                  CreateUrlCacheGroup(                    DWORD dwFlags, LPVOID lpReserved);
  BOOLAPI                  DeleteUrlCacheEntry(                    LPCTSTR lpszUrlName);
  BOOL                     DeleteUrlCacheGroup(                    GROUPID GroupId, DWORD dwFlags, LPVOID lpReserved);
  BOOL                     DetectAutoProxyUrl(                     LPSTR lpszAutoProxyUrl, DWORD dwAutoProxyUrlLength, DWORD dwDetectFlags);
  BOOLAPI                  FindCloseUrlCache(                      HANDLE hEnumHandle);
  HANDLE                   FindFirstUrlCacheEntry(                 LPCTSTR lpszUrlSearchPattern, LPINTERNET_CACHE_ENTRY_INFO lpFirstCacheEntryInfo, LPDWORD lpcbCacheEntryInfo);
  HANDLE                   FindFirstUrlCacheEntryEx(               LPCTSTR lpszUrlSearchPattern, DWORD dwFlags, DWORD dwFilter, GROUPID GroupId, LPINTERNET_CACHE_ENTRY_INFO lpFirstCacheEntryInfo, LPDWORD lpdwEntryInfo, LPVOID lpGroupAttributes, LPDWORD lpcbGroupAttributes, LPVOID lpReserved);
  HANDLE                   FindFirstUrlCacheGroup(                 DWORD dwFlags, DWORD dwFilter, LPVOID lpSearchCondition, DWORD dwSearchCondition, GROUPID* lpGroupId, LPVOID lpReserved);
  BOOLAPI                  FindNextUrlCacheEntry(                  HANDLE hEnumHandle, LPINTERNET_CACHE_ENTRY_INFO lpNextCacheEntryInfo, LPDWORD lpcbCacheEntryInfo);
  BOOL                     FindNextUrlCacheEntryEx(                HANDLE hEnumHandle, LPINTERNET_CACHE_ENTRY_INFO lpNextCacheEntryInfo, LPDWORD lpcbEntryInfo, LPVOID lpGroupAttributes, LPDWORD lpcbGroupAttributes, LPVOID lpReserved);
  BOOL                     FindNextUrlCacheGroup(                  HANDLE hFind, GROUPID* lpGroupId, LPVOID lpReserved);
  BOOL                     FtpCommand(                             HINTERNET hConnect, BOOL fExpectResponse, DWORD dwFlags, LPCTSTR lpszCommand, DWORD_PTR dwContext, HINTERNET* phFtpCommand);
  BOOL                     FtpCreateDirectory(                     HINTERNET hConnect, LPCTSTR lpszDirectory);
  BOOL                     FtpDeleteFile(                          HINTERNET hConnect, LPCTSTR lpszFileName);
  HINTERNET                FtpFindFirstFile(                       HINTERNET hConnect, LPCTSTR lpszSearchFile, LPWIN32_FIND_DATA lpFindFileData, DWORD dwFlags, DWORD_PTR dwContext);
  BOOL                     FtpGetCurrentDirectory(                 HINTERNET hConnect, LPTSTR lpszCurrentDirectory, LPDWORD lpdwCurrentDirectory);
  BOOL                     FtpGetFile(                             HINTERNET hConnect, LPCTSTR lpszRemoteFile, LPCTSTR lpszNewFile, BOOL fFailIfExists, DWORD dwFlagsAndAttributes, DWORD dwFlags, DWORD_PTR dwContext);
  DWORD                    FtpGetFileSize(                         HINTERNET hFile, LPDWORD lpdwFileSizeHigh);
  HINTERNET                FtpOpenFile(                            HINTERNET hConnect, LPCTSTR lpszFileName, DWORD dwAccess, DWORD dwFlags, DWORD_PTR dwContext);
  BOOL                     FtpPutFile(                             HINTERNET hConnect, LPCTSTR lpszLocalFile, LPCTSTR lpszNewRemoteFile, DWORD dwFlags, DWORD_PTR dwContext);
  BOOL                     FtpRemoveDirectory(                     HINTERNET hConnect, LPCTSTR lpszDirectory);
  BOOL                     FtpRenameFile(                          HINTERNET hConnect, LPCTSTR lpszExisting, LPCTSTR lpszNew);
  BOOL                     FtpSetCurrentDirectory(                 HINTERNET hConnect, LPCTSTR lpszDirectory);
  BOOL                     GetUrlCacheEntryInfo(                   LPCTSTR lpszUrlName, LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo, LPDWORD lpcbCacheEntryInfo);
  BOOLAPI                  GetUrlCacheEntryInfoEx(                 LPCTSTR lpszUrl, LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo, LPDWORD lpcbCacheEntryInfo, LPTSTR lpszRedirectUrl, LPDWORD lpcbRedirectUrl, LPVOID lpReserved, DWORD dwFlags);
  BOOL                     GetUrlCacheGroupAttribute(              GROUPID gid, DWORD dwFlags, DWORD dwAttributes, LPINTERNET_CACHE_GROUP_INFO lpGroupInfo, LPDWORD lpdwGroupInfo, LPVOID lpReserved);
  BOOL                     GopherCreateLocator(                    LPCTSTR lpszHost, INTERNET_PORT nServerPort, LPCTSTR lpszDisplayString, LPCTSTR lpszSelectorString, DWORD dwGopherType, LPTSTR lpszLocator, LPDWORD lpdwBufferLength);
  HINTERNET                GopherFindFirstFile(                    HINTERNET hConnect, LPCTSTR lpszLocator, LPCTSTR lpszSearchString, LPGOPHER_FIND_DATA lpFindData, DWORD dwFlags, DWORD_PTR dwContext);
  BOOL                     GopherGetAttribute(                     HINTERNET hConnect, LPCTSTR lpszLocator, LPCTSTR lpszAttributeName, LPBYTE lpBuffer, DWORD dwBufferLength, LPDWORD lpdwCharactersReturned, GOPHER_ATTRIBUTE_ENUMERATOR lpfnEnumerator, DWORD_PTR dwContext);
  BOOL                     GopherGetLocatorType(                   LPCTSTR lpszLocator, LPDWORD lpdwGopherType);
  HINTERNET                GopherOpenFile(                         HINTERNET hConnect, LPCTSTR lpszLocator, LPCTSTR lpszView, DWORD dwFlags, DWORD_PTR dwContext);
  BOOL                     HttpAddRequestHeaders(                  HINTERNET hConnect, LPCTSTR lpszHeaders, DWORD dwHeadersLength, WINAPI_HttpAddReqFlag dwModifiers);
  BOOL                     HttpEndRequest(                         HINTERNET hRequest, LPINTERNET_BUFFERS lpBuffersOut, DWORD dwFlags, DWORD_PTR dwContext);
  HINTERNET                HttpOpenRequest(                        HINTERNET hConnect, LPCTSTR lpszVerb, LPCTSTR lpszObjectName, LPCTSTR lpszVersion, LPCTSTR lpszReferer, LPCTSTR* lplpszAcceptTypes, WINAPI_InternetFlags dwFlags, DWORD_PTR dwContext);
  BOOL                     HttpQueryInfo(                          HINTERNET hRequest, WINAPI_HttpQueryFlags dwInfoLevel, LPVOID lpvBuffer, LPDWORD lpdwBufferLength, LPDWORD lpdwIndex);
  BOOL                     HttpSendRequest(                        HINTERNET hRequest, LPCTSTR lpszHeaders, DWORD dwHeadersLength, LPVOID lpOptional, DWORD dwOptionalLength);
  BOOL                     HttpSendRequestEx(                      HINTERNET hRequest, LPINTERNET_BUFFERS lpBuffersIn, LPINTERNET_BUFFERS lpBuffersOut, DWORD dwFlags, DWORD_PTR dwContext);
  DWORD                    InternetAttemptConnect(                 DWORD dwReserved);
  BOOL                     InternetAutodial(                       DWORD dwFlags, HWND hwndParent);
  BOOL                     InternetAutodialHangup(                 DWORD dwReserved);
  BOOL                     InternetCanonicalizeUrl(                LPCTSTR lpszUrl, LPTSTR lpszBuffer, LPDWORD lpdwBufferLength, WINAPI_InternetCanonicalizeUrlFlags dwFlags);
  BOOL                     InternetCheckConnection(                LPCTSTR lpszUrl, DWORD dwFlags, DWORD dwReserved);
  BOOL                     InternetCloseHandle(                    HINTERNET hInternet);
  BOOL                     InternetCombineUrl(                     LPCTSTR lpszBaseUrl, LPCTSTR lpszRelativeUrl, LPTSTR lpszBuffer, LPDWORD lpdwBufferLength, WINAPI_InternetCanonicalizeUrlFlags dwFlags);
  DWORD                    InternetConfirmZoneCrossing(            HWND hWnd, LPTSTR szUrlPrev, LPTSTR szUrlNew, BOOL bPost);
  HINTERNET                InternetConnect(                        HINTERNET hInternet, LPCTSTR lpszServerName, INTERNET_PORT nServerPort, LPCTSTR lpszUsername, LPCTSTR lpszPassword, WINAPI_InternetService dwService, WINAPI_InternetFlags dwFlags, DWORD_PTR dwContext);
  BOOL                     InternetCrackUrl(                       LPCTSTR lpszUrl, DWORD dwUrlLength, WINAPI_InternetCrackUrlFlags dwFlags, LPURL_COMPONENTS lpUrlComponents);
  BOOL                     InternetCreateUrl(                      LPURL_COMPONENTS lpUrlComponents, WINAPI_InternetCrackUrlFlags dwFlags, LPTSTR lpszUrl, LPDWORD lpdwUrlLength);
  DWORD                    InternetDial(                           HWND hwndParent, LPTSTR pszEntryName, DWORD dwFlags, DWORD_PTR* lpdwConnection, DWORD dwReserved);
  DWORD                    InternetErrorDlg(                       HWND hWnd, HINTERNET hRequest, WINAPI_InternetErrorDlgErrorCode dwError, WINAPI_InternetErrorDlgFlags dwFlags, LPVOID* lppvData);
  BOOL                     InternetFindNextFile(                   HINTERNET hFind, LPVOID lpvFindData);
  BOOL                     InternetGetConnectedState(              WINAPI_InternetGetConnectedStateFlags* lpdwFlags, DWORD dwReserved);
  BOOL                     InternetGetConnectedStateEx(            WINAPI_InternetGetConnectedStateFlags* lpdwFlags, LPTSTR lpszConnectionName, DWORD dwNameLen, DWORD dwReserved);
  BOOL                     InternetGetCookie(                      LPCTSTR lpszUrl, LPCTSTR lpszCookieName, LPTSTR lpszCookieData, LPDWORD lpdwSize);
  BOOL                     InternetGetCookieEx(                    LPCTSTR pchURL, LPCTSTR pchCookieName, LPTSTR pchCookieData, LPDWORD pcchCookieData, WINAPI_InternetCookieFlags dwFlags, LPVOID lpReserved);
  BOOL                     InternetGetLastResponseInfo(            LPDWORD lpdwError, LPTSTR lpszBuffer, LPDWORD lpdwBufferLength);
  BOOL                     InternetGoOnline(                       LPTSTR lpszURL, HWND hwndParent, DWORD dwFlags);
  DWORD                    InternetHangUp(                         DWORD_PTR dwConnection, DWORD dwReserved);
  BOOL                     InternetLockRequestFile(                HINTERNET hInternet, HANDLE* lphLockReqHandle);
  HINTERNET                InternetOpen(                           LPCTSTR lpszAgent, WINAPI_InternetOpenType dwAccessType, LPCTSTR lpszProxyName, LPCTSTR lpszProxyBypass, WINAPI_InternetOpenFlags dwFlags);
  HINTERNET                InternetOpenUrl(                        HINTERNET hInternet, LPCTSTR lpszUrl, LPCTSTR lpszHeaders, DWORD dwHeadersLength, WINAPI_InternetFlags dwFlags, DWORD_PTR dwContext);
  BOOL                     InternetQueryDataAvailable(             HINTERNET hFile, LPDWORD lpdwNumberOfBytesAvailable, DWORD dwFlags, DWORD_PTR dwContext);
  BOOL                     InternetQueryOption(                    HINTERNET hInternet, WINAPI_InternetOption dwOption, LPVOID lpBuffer, LPDWORD lpdwBufferLength);
  BOOL                     InternetReadFile(                       HINTERNET hFile, LPVOID lpBuffer, DWORD dwNumberOfBytesToRead, LPDWORD lpdwNumberOfBytesRead);
  BOOL                     InternetReadFileEx(                     HINTERNET hFile, LPINTERNET_BUFFERS lpBuffersOut, WINAPI_InternetReadFileFlags dwFlags, DWORD_PTR dwContext);
  BOOL                     InternetSetCookie(                      LPCTSTR lpszUrl, LPCTSTR lpszCookieName, LPCTSTR lpszCookieData);
  DWORD                    InternetSetCookieEx(                    LPCTSTR lpszURL, LPCTSTR lpszCookieName, LPCTSTR lpszCookieData, WINAPI_InternetCookieFlags dwFlags, DWORD_PTR dwReserved);
  DWORD                    InternetSetFilePointer(                 HINTERNET hFile, LONG lDistanceToMove, PVOID pReserved, DWORD dwMoveMethod, DWORD_PTR dwContext);
  BOOL                     InternetSetOption(                      HINTERNET hInternet, WINAPI_InternetOption dwOption, LPVOID lpBuffer, DWORD dwBufferLength);
  INTERNET_STATUS_CALLBACK InternetSetStatusCallback(              HINTERNET hInternet, INTERNET_STATUS_CALLBACK lpfnInternetCallback);
  BOOL                     InternetTimeFromSystemTime(             WINAPI_SYSTEMTIME* pst, DWORD dwRFC, LPTSTR lpszTime, DWORD cbTime);
  BOOL                     InternetTimeToSystemTime(               LPCTSTR lpszTime, SYSTEMTIME* pst, DWORD dwReserved);
  BOOLAPI                  InternetUnlockRequestFile(              HANDLE hLockRequestInfo);
  BOOL                     InternetWriteFile(                      HINTERNET hFile, LPCVOID lpBuffer, DWORD dwNumberOfBytesToWrite, LPDWORD lpdwNumberOfBytesWritten);
  BOOLAPI                  ReadUrlCacheEntryStream(                HANDLE hUrlCacheStream, DWORD dwLocation, LPVOID lpBuffer, LPDWORD lpdwLen, DWORD dwReserved);
  BOOL                     ResumeSuspendedDownload(                HINTERNET hRequest, DWORD dwResultCode);
  BOOLAPI                  RetrieveUrlCacheEntryFile(              LPCTSTR lpszUrlName, LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo, LPDWORD lpcbCacheEntryInfo, DWORD dwReserved);
  HANDLE                   RetrieveUrlCacheEntryStream(            LPCTSTR lpszUrlName, LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo, LPDWORD lpcbCacheEntryInfo, BOOL fRandomRead, DWORD dwReserved);
  BOOLAPI                  SetUrlCacheEntryGroup(                  LPCTSTR lpszUrlName, DWORD dwFlags, GROUPID GroupId, LPBYTE pbGroupAttributes, DWORD cbGroupAttributes, LPVOID lpReserved);
  BOOLAPI                  SetUrlCacheEntryInfo(                   LPCTSTR lpszUrlName, LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo, WINAPI_CacheEntryFieldControl dwFieldControl);
  BOOL                     SetUrlCacheGroupAttribute(              GROUPID gid, DWORD dwFlags, DWORD dwAttributes, LPINTERNET_CACHE_GROUP_INFO lpGroupInfo, LPVOID lpReserved);
  BOOLAPI                  UnlockUrlCacheEntryFile(                LPCTSTR lpszUrlName, DWORD dwReserved);
  BOOLAPI                  UnlockUrlCacheEntryStream(              HANDLE hUrlCacheStream, DWORD dwReserved);
  BOOL                     InternetClearAllPerSiteCookieDecisions( );
  BOOL                     InternetEnumPerSiteCookieDecision(      LPTSTR pszSiteName, unsigned long* pcSiteNameSize, unsigned long* pdwDecision, unsigned long dwIndex);
  BOOL                     InternetGetPerSiteCookieDecision(       LPCTSTR pchHostName, unsigned long* pResult);
  BOOL                     InternetSetPerSiteCookieDecision(       LPCTSTR pchHostName, DWORD dwDecision);
  DWORD                    PrivacyGetZonePreferenceW(              DWORD dwZone, DWORD dwType, LPDWORD pdwTemplate, LPWSTR pszBuffer, LPDWORD pdwBufferLength);
  DWORD                    PrivacySetZonePreferenceW(              DWORD dwZone, DWORD dwType, DWORD dwTemplate, LPCWSTR pszPreference);
]]
return ffi.load( 'Wininet.dll' )
